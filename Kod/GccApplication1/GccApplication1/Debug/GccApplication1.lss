
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000110e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000013a  00800060  0000110e  000011a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000020a  0080019a  0080019a  000012dc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000012dc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001338  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00001374  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000020df  00000000  00000000  000014ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a71  00000000  00000000  0000358b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dd3  00000000  00000000  00003ffc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000033c  00000000  00000000  00004dd0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005f9  00000000  00000000  0000510c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fc2  00000000  00000000  00005705  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  000066c7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 07 01 	jmp	0x20e	; 0x20e <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e0       	ldi	r30, 0x0E	; 14
      68:	f1 e1       	ldi	r31, 0x11	; 17
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	aa 39       	cpi	r26, 0x9A	; 154
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	23 e0       	ldi	r18, 0x03	; 3
      78:	aa e9       	ldi	r26, 0x9A	; 154
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a4 3a       	cpi	r26, 0xA4	; 164
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 5a 05 	call	0xab4	; 0xab4 <main>
      8a:	0c 94 85 08 	jmp	0x110a	; 0x110a <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
      92:	df 9a       	sbi	0x1b, 7	; 27
      94:	00 c0       	rjmp	.+0      	; 0x96 <toggle_e+0x4>
      96:	df 98       	cbi	0x1b, 7	; 27
      98:	08 95       	ret

0000009a <lcd_write>:
      9a:	cf 93       	push	r28
      9c:	df 93       	push	r29
      9e:	d8 2f       	mov	r29, r24
      a0:	66 23       	and	r22, r22
      a2:	11 f0       	breq	.+4      	; 0xa8 <lcd_write+0xe>
      a4:	dd 9a       	sbi	0x1b, 5	; 27
      a6:	01 c0       	rjmp	.+2      	; 0xaa <lcd_write+0x10>
      a8:	dd 98       	cbi	0x1b, 5	; 27
      aa:	de 98       	cbi	0x1b, 6	; 27
      ac:	8a b3       	in	r24, 0x1a	; 26
      ae:	8f 60       	ori	r24, 0x0F	; 15
      b0:	8a bb       	out	0x1a, r24	; 26
      b2:	cb b3       	in	r28, 0x1b	; 27
      b4:	c0 7f       	andi	r28, 0xF0	; 240
      b6:	8d 2f       	mov	r24, r29
      b8:	82 95       	swap	r24
      ba:	8f 70       	andi	r24, 0x0F	; 15
      bc:	8c 2b       	or	r24, r28
      be:	8b bb       	out	0x1b, r24	; 27
      c0:	0e 94 49 00 	call	0x92	; 0x92 <toggle_e>
      c4:	df 70       	andi	r29, 0x0F	; 15
      c6:	dc 2b       	or	r29, r28
      c8:	db bb       	out	0x1b, r29	; 27
      ca:	0e 94 49 00 	call	0x92	; 0x92 <toggle_e>
      ce:	cf 60       	ori	r28, 0x0F	; 15
      d0:	cb bb       	out	0x1b, r28	; 27
      d2:	df 91       	pop	r29
      d4:	cf 91       	pop	r28
      d6:	08 95       	ret

000000d8 <lcd_read>:
      d8:	88 23       	and	r24, r24
      da:	11 f0       	breq	.+4      	; 0xe0 <lcd_read+0x8>
      dc:	dd 9a       	sbi	0x1b, 5	; 27
      de:	01 c0       	rjmp	.+2      	; 0xe2 <lcd_read+0xa>
      e0:	dd 98       	cbi	0x1b, 5	; 27
      e2:	de 9a       	sbi	0x1b, 6	; 27
      e4:	8a b3       	in	r24, 0x1a	; 26
      e6:	80 7f       	andi	r24, 0xF0	; 240
      e8:	8a bb       	out	0x1a, r24	; 26
      ea:	df 9a       	sbi	0x1b, 7	; 27
      ec:	00 c0       	rjmp	.+0      	; 0xee <lcd_read+0x16>
      ee:	99 b3       	in	r25, 0x19	; 25
      f0:	df 98       	cbi	0x1b, 7	; 27
      f2:	00 c0       	rjmp	.+0      	; 0xf4 <lcd_read+0x1c>
      f4:	df 9a       	sbi	0x1b, 7	; 27
      f6:	00 c0       	rjmp	.+0      	; 0xf8 <lcd_read+0x20>
      f8:	29 b3       	in	r18, 0x19	; 25
      fa:	2f 70       	andi	r18, 0x0F	; 15
      fc:	89 2f       	mov	r24, r25
      fe:	82 95       	swap	r24
     100:	80 7f       	andi	r24, 0xF0	; 240
     102:	df 98       	cbi	0x1b, 7	; 27
     104:	82 2b       	or	r24, r18
     106:	08 95       	ret

00000108 <lcd_waitbusy>:
     108:	80 e0       	ldi	r24, 0x00	; 0
     10a:	0e 94 6c 00 	call	0xd8	; 0xd8 <lcd_read>
     10e:	88 23       	and	r24, r24
     110:	dc f3       	brlt	.-10     	; 0x108 <lcd_waitbusy>
     112:	83 e0       	ldi	r24, 0x03	; 3
     114:	90 e0       	ldi	r25, 0x00	; 0
     116:	01 97       	sbiw	r24, 0x01	; 1
     118:	f1 f7       	brne	.-4      	; 0x116 <lcd_waitbusy+0xe>
     11a:	80 e0       	ldi	r24, 0x00	; 0
     11c:	0e 94 6c 00 	call	0xd8	; 0xd8 <lcd_read>
     120:	08 95       	ret

00000122 <lcd_command>:
     122:	cf 93       	push	r28
     124:	c8 2f       	mov	r28, r24
     126:	0e 94 84 00 	call	0x108	; 0x108 <lcd_waitbusy>
     12a:	60 e0       	ldi	r22, 0x00	; 0
     12c:	8c 2f       	mov	r24, r28
     12e:	0e 94 4d 00 	call	0x9a	; 0x9a <lcd_write>
     132:	cf 91       	pop	r28
     134:	08 95       	ret

00000136 <lcd_gotoxy>:
     136:	61 11       	cpse	r22, r1
     138:	04 c0       	rjmp	.+8      	; 0x142 <lcd_gotoxy+0xc>
     13a:	80 58       	subi	r24, 0x80	; 128
     13c:	0e 94 91 00 	call	0x122	; 0x122 <lcd_command>
     140:	08 95       	ret
     142:	80 54       	subi	r24, 0x40	; 64
     144:	0e 94 91 00 	call	0x122	; 0x122 <lcd_command>
     148:	08 95       	ret

0000014a <lcd_clrscr>:
     14a:	81 e0       	ldi	r24, 0x01	; 1
     14c:	0e 94 91 00 	call	0x122	; 0x122 <lcd_command>
     150:	08 95       	ret

00000152 <lcd_putc>:
     152:	cf 93       	push	r28
     154:	c8 2f       	mov	r28, r24
     156:	0e 94 84 00 	call	0x108	; 0x108 <lcd_waitbusy>
     15a:	ca 30       	cpi	r28, 0x0A	; 10
     15c:	49 f4       	brne	.+18     	; 0x170 <lcd_putc+0x1e>
     15e:	80 34       	cpi	r24, 0x40	; 64
     160:	10 f0       	brcs	.+4      	; 0x166 <lcd_putc+0x14>
     162:	80 e0       	ldi	r24, 0x00	; 0
     164:	01 c0       	rjmp	.+2      	; 0x168 <lcd_putc+0x16>
     166:	80 e4       	ldi	r24, 0x40	; 64
     168:	80 58       	subi	r24, 0x80	; 128
     16a:	0e 94 91 00 	call	0x122	; 0x122 <lcd_command>
     16e:	04 c0       	rjmp	.+8      	; 0x178 <lcd_putc+0x26>
     170:	61 e0       	ldi	r22, 0x01	; 1
     172:	8c 2f       	mov	r24, r28
     174:	0e 94 4d 00 	call	0x9a	; 0x9a <lcd_write>
     178:	cf 91       	pop	r28
     17a:	08 95       	ret

0000017c <lcd_puts>:
     17c:	cf 93       	push	r28
     17e:	df 93       	push	r29
     180:	ec 01       	movw	r28, r24
     182:	21 96       	adiw	r28, 0x01	; 1
     184:	fc 01       	movw	r30, r24
     186:	80 81       	ld	r24, Z
     188:	88 23       	and	r24, r24
     18a:	29 f0       	breq	.+10     	; 0x196 <lcd_puts+0x1a>
     18c:	0e 94 a9 00 	call	0x152	; 0x152 <lcd_putc>
     190:	89 91       	ld	r24, Y+
     192:	81 11       	cpse	r24, r1
     194:	fb cf       	rjmp	.-10     	; 0x18c <lcd_puts+0x10>
     196:	df 91       	pop	r29
     198:	cf 91       	pop	r28
     19a:	08 95       	ret

0000019c <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
     19c:	1f 93       	push	r17
     19e:	cf 93       	push	r28
     1a0:	df 93       	push	r29
     1a2:	18 2f       	mov	r17, r24
    }
    else if ( ( &LCD_DATA0_PORT == &LCD_DATA1_PORT) && ( &LCD_DATA1_PORT == &LCD_DATA2_PORT ) && ( &LCD_DATA2_PORT == &LCD_DATA3_PORT )
           && (LCD_DATA0_PIN == 0 ) && (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) )
    {
        /* configure all port bits as output (all LCD data lines on same port, but control lines on different ports) */
        DDR(LCD_DATA0_PORT) |= 0x0F;
     1a4:	8a b3       	in	r24, 0x1a	; 26
     1a6:	8f 60       	ori	r24, 0x0F	; 15
     1a8:	8a bb       	out	0x1a, r24	; 26
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
     1aa:	d5 9a       	sbi	0x1a, 5	; 26
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
     1ac:	d6 9a       	sbi	0x1a, 6	; 26
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
     1ae:	d7 9a       	sbi	0x1a, 7	; 26
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     1b0:	80 e3       	ldi	r24, 0x30	; 48
     1b2:	93 e7       	ldi	r25, 0x73	; 115
     1b4:	01 97       	sbiw	r24, 0x01	; 1
     1b6:	f1 f7       	brne	.-4      	; 0x1b4 <lcd_init+0x18>
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(16000);        /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);  // _BV(LCD_FUNCTION)>>4;
     1b8:	d9 9a       	sbi	0x1b, 1	; 27
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);  // _BV(LCD_FUNCTION_8BIT)>>4;
     1ba:	d8 9a       	sbi	0x1b, 0	; 27
    lcd_e_toggle();
     1bc:	0e 94 49 00 	call	0x92	; 0x92 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     1c0:	80 ef       	ldi	r24, 0xF0	; 240
     1c2:	93 e2       	ldi	r25, 0x23	; 35
     1c4:	01 97       	sbiw	r24, 0x01	; 1
     1c6:	f1 f7       	brne	.-4      	; 0x1c4 <lcd_init+0x28>
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);  // _BV(LCD_FUNCTION_8BIT)>>4;
    lcd_e_toggle();
    delay(4992);         /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
     1c8:	0e 94 49 00 	call	0x92	; 0x92 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     1cc:	c5 e7       	ldi	r28, 0x75	; 117
     1ce:	d0 e0       	ldi	r29, 0x00	; 0
     1d0:	ce 01       	movw	r24, r28
     1d2:	01 97       	sbiw	r24, 0x01	; 1
     1d4:	f1 f7       	brne	.-4      	; 0x1d2 <lcd_init+0x36>
    /* repeat last command */ 
    lcd_e_toggle();      
    delay(64);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
     1d6:	0e 94 49 00 	call	0x92	; 0x92 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     1da:	ce 01       	movw	r24, r28
     1dc:	01 97       	sbiw	r24, 0x01	; 1
     1de:	f1 f7       	brne	.-4      	; 0x1dc <lcd_init+0x40>
    /* repeat last command a third time */
    lcd_e_toggle();      
    delay(64);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
     1e0:	d8 98       	cbi	0x1b, 0	; 27
    lcd_e_toggle();
     1e2:	0e 94 49 00 	call	0x92	; 0x92 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     1e6:	21 97       	sbiw	r28, 0x01	; 1
     1e8:	f1 f7       	brne	.-4      	; 0x1e6 <lcd_init+0x4a>
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
     1ea:	88 e2       	ldi	r24, 0x28	; 40
     1ec:	0e 94 91 00 	call	0x122	; 0x122 <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
     1f0:	88 e0       	ldi	r24, 0x08	; 8
     1f2:	0e 94 91 00 	call	0x122	; 0x122 <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
     1f6:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
     1fa:	86 e0       	ldi	r24, 0x06	; 6
     1fc:	0e 94 91 00 	call	0x122	; 0x122 <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
     200:	81 2f       	mov	r24, r17
     202:	0e 94 91 00 	call	0x122	; 0x122 <lcd_command>

}/* lcd_init */
     206:	df 91       	pop	r29
     208:	cf 91       	pop	r28
     20a:	1f 91       	pop	r17
     20c:	08 95       	ret

0000020e <__vector_11>:
		} else {
		lcd_puts("Igrac 2 pobjedio");
	}
	_delay_ms(5000);
	return;
}
     20e:	1f 92       	push	r1
     210:	0f 92       	push	r0
     212:	0f b6       	in	r0, 0x3f	; 63
     214:	0f 92       	push	r0
     216:	11 24       	eor	r1, r1
     218:	2f 93       	push	r18
     21a:	8f 93       	push	r24
     21c:	9f 93       	push	r25
     21e:	ef 93       	push	r30
     220:	ff 93       	push	r31
     222:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <__data_end>
     226:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <__data_end+0x1>
     22a:	2c b1       	in	r18, 0x0c	; 12
     22c:	fc 01       	movw	r30, r24
     22e:	e0 56       	subi	r30, 0x60	; 96
     230:	fe 4f       	sbci	r31, 0xFE	; 254
     232:	20 83       	st	Z, r18
     234:	01 96       	adiw	r24, 0x01	; 1
     236:	81 15       	cp	r24, r1
     238:	22 e0       	ldi	r18, 0x02	; 2
     23a:	92 07       	cpc	r25, r18
     23c:	29 f0       	breq	.+10     	; 0x248 <__vector_11+0x3a>
     23e:	90 93 9b 01 	sts	0x019B, r25	; 0x80019b <__data_end+0x1>
     242:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <__data_end>
     246:	04 c0       	rjmp	.+8      	; 0x250 <__vector_11+0x42>
     248:	10 92 9b 01 	sts	0x019B, r1	; 0x80019b <__data_end+0x1>
     24c:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <__data_end>
     250:	ff 91       	pop	r31
     252:	ef 91       	pop	r30
     254:	9f 91       	pop	r25
     256:	8f 91       	pop	r24
     258:	2f 91       	pop	r18
     25a:	0f 90       	pop	r0
     25c:	0f be       	out	0x3f, r0	; 63
     25e:	0f 90       	pop	r0
     260:	1f 90       	pop	r1
     262:	18 95       	reti

00000264 <rcvBufferSize>:
     264:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <__data_end>
     268:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <__data_end+0x1>
     26c:	20 91 9c 01 	lds	r18, 0x019C	; 0x80019c <rcvBufferStart>
     270:	30 91 9d 01 	lds	r19, 0x019D	; 0x80019d <rcvBufferStart+0x1>
     274:	82 17       	cp	r24, r18
     276:	93 07       	cpc	r25, r19
     278:	1c f0       	brlt	.+6      	; 0x280 <rcvBufferSize+0x1c>
     27a:	82 1b       	sub	r24, r18
     27c:	93 0b       	sbc	r25, r19
     27e:	08 95       	ret
     280:	82 1b       	sub	r24, r18
     282:	93 0b       	sbc	r25, r19
     284:	9e 5f       	subi	r25, 0xFE	; 254
     286:	08 95       	ret

00000288 <serialSendChar>:
     288:	5d 9b       	sbis	0x0b, 5	; 11
     28a:	fe cf       	rjmp	.-4      	; 0x288 <serialSendChar>
     28c:	8c b9       	out	0x0c, r24	; 12
     28e:	5e 9b       	sbis	0x0b, 6	; 11
     290:	fe cf       	rjmp	.-4      	; 0x28e <serialSendChar+0x6>
     292:	08 95       	ret

00000294 <sendCommand>:
     294:	ef 92       	push	r14
     296:	ff 92       	push	r15
     298:	0f 93       	push	r16
     29a:	1f 93       	push	r17
     29c:	cf 93       	push	r28
     29e:	df 93       	push	r29
     2a0:	cd b7       	in	r28, 0x3d	; 61
     2a2:	de b7       	in	r29, 0x3e	; 62
     2a4:	2c 97       	sbiw	r28, 0x0c	; 12
     2a6:	0f b6       	in	r0, 0x3f	; 63
     2a8:	f8 94       	cli
     2aa:	de bf       	out	0x3e, r29	; 62
     2ac:	0f be       	out	0x3f, r0	; 63
     2ae:	cd bf       	out	0x3d, r28	; 61
     2b0:	25 e5       	ldi	r18, 0x55	; 85
     2b2:	29 83       	std	Y+1, r18	; 0x01
     2b4:	2a ea       	ldi	r18, 0xAA	; 170
     2b6:	2a 83       	std	Y+2, r18	; 0x02
     2b8:	21 e0       	ldi	r18, 0x01	; 1
     2ba:	2b 83       	std	Y+3, r18	; 0x03
     2bc:	1c 82       	std	Y+4, r1	; 0x04
     2be:	4d 83       	std	Y+5, r20	; 0x05
     2c0:	5e 83       	std	Y+6, r21	; 0x06
     2c2:	6f 83       	std	Y+7, r22	; 0x07
     2c4:	78 87       	std	Y+8, r23	; 0x08
     2c6:	89 87       	std	Y+9, r24	; 0x09
     2c8:	9a 87       	std	Y+10, r25	; 0x0a
     2ca:	8e 01       	movw	r16, r28
     2cc:	0f 5f       	subi	r16, 0xFF	; 255
     2ce:	1f 4f       	sbci	r17, 0xFF	; 255
     2d0:	ae 01       	movw	r20, r28
     2d2:	45 5f       	subi	r20, 0xF5	; 245
     2d4:	5f 4f       	sbci	r21, 0xFF	; 255
     2d6:	f8 01       	movw	r30, r16
     2d8:	80 e0       	ldi	r24, 0x00	; 0
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	21 91       	ld	r18, Z+
     2de:	82 0f       	add	r24, r18
     2e0:	91 1d       	adc	r25, r1
     2e2:	e4 17       	cp	r30, r20
     2e4:	f5 07       	cpc	r31, r21
     2e6:	d1 f7       	brne	.-12     	; 0x2dc <sendCommand+0x48>
     2e8:	8b 87       	std	Y+11, r24	; 0x0b
     2ea:	9c 87       	std	Y+12, r25	; 0x0c
     2ec:	7e 01       	movw	r14, r28
     2ee:	8d e0       	ldi	r24, 0x0D	; 13
     2f0:	e8 0e       	add	r14, r24
     2f2:	f1 1c       	adc	r15, r1
     2f4:	f8 01       	movw	r30, r16
     2f6:	81 91       	ld	r24, Z+
     2f8:	8f 01       	movw	r16, r30
     2fa:	0e 94 44 01 	call	0x288	; 0x288 <serialSendChar>
     2fe:	0e 15       	cp	r16, r14
     300:	1f 05       	cpc	r17, r15
     302:	c1 f7       	brne	.-16     	; 0x2f4 <sendCommand+0x60>
     304:	2c 96       	adiw	r28, 0x0c	; 12
     306:	0f b6       	in	r0, 0x3f	; 63
     308:	f8 94       	cli
     30a:	de bf       	out	0x3e, r29	; 62
     30c:	0f be       	out	0x3f, r0	; 63
     30e:	cd bf       	out	0x3d, r28	; 61
     310:	df 91       	pop	r29
     312:	cf 91       	pop	r28
     314:	1f 91       	pop	r17
     316:	0f 91       	pop	r16
     318:	ff 90       	pop	r15
     31a:	ef 90       	pop	r14
     31c:	08 95       	ret

0000031e <receiveAck>:
     31e:	cf 93       	push	r28
     320:	df 93       	push	r29
     322:	cd b7       	in	r28, 0x3d	; 61
     324:	de b7       	in	r29, 0x3e	; 62
     326:	2c 97       	sbiw	r28, 0x0c	; 12
     328:	0f b6       	in	r0, 0x3f	; 63
     32a:	f8 94       	cli
     32c:	de bf       	out	0x3e, r29	; 62
     32e:	0f be       	out	0x3f, r0	; 63
     330:	cd bf       	out	0x3d, r28	; 61
     332:	04 c0       	rjmp	.+8      	; 0x33c <receiveAck+0x1e>
     334:	83 e3       	ldi	r24, 0x33	; 51
     336:	97 e0       	ldi	r25, 0x07	; 7
     338:	01 97       	sbiw	r24, 0x01	; 1
     33a:	f1 f7       	brne	.-4      	; 0x338 <receiveAck+0x1a>
     33c:	0e 94 32 01 	call	0x264	; 0x264 <rcvBufferSize>
     340:	0c 97       	sbiw	r24, 0x0c	; 12
     342:	c4 f3       	brlt	.-16     	; 0x334 <receiveAck+0x16>
     344:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <rcvBufferStart>
     348:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <rcvBufferStart+0x1>
     34c:	fe 01       	movw	r30, r28
     34e:	31 96       	adiw	r30, 0x01	; 1
     350:	20 e0       	ldi	r18, 0x00	; 0
     352:	30 e0       	ldi	r19, 0x00	; 0
     354:	60 e0       	ldi	r22, 0x00	; 0
     356:	70 e0       	ldi	r23, 0x00	; 0
     358:	dc 01       	movw	r26, r24
     35a:	a0 56       	subi	r26, 0x60	; 96
     35c:	be 4f       	sbci	r27, 0xFE	; 254
     35e:	4c 91       	ld	r20, X
     360:	41 93       	st	Z+, r20
     362:	01 96       	adiw	r24, 0x01	; 1
     364:	81 15       	cp	r24, r1
     366:	52 e0       	ldi	r21, 0x02	; 2
     368:	95 07       	cpc	r25, r21
     36a:	11 f4       	brne	.+4      	; 0x370 <receiveAck+0x52>
     36c:	80 e0       	ldi	r24, 0x00	; 0
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	2a 30       	cpi	r18, 0x0A	; 10
     372:	31 05       	cpc	r19, r1
     374:	14 f4       	brge	.+4      	; 0x37a <receiveAck+0x5c>
     376:	64 0f       	add	r22, r20
     378:	71 1d       	adc	r23, r1
     37a:	2f 5f       	subi	r18, 0xFF	; 255
     37c:	3f 4f       	sbci	r19, 0xFF	; 255
     37e:	2c 30       	cpi	r18, 0x0C	; 12
     380:	31 05       	cpc	r19, r1
     382:	51 f7       	brne	.-44     	; 0x358 <receiveAck+0x3a>
     384:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <rcvBufferStart+0x1>
     388:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <rcvBufferStart>
     38c:	8c 85       	ldd	r24, Y+12	; 0x0c
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	98 2f       	mov	r25, r24
     392:	88 27       	eor	r24, r24
     394:	2b 85       	ldd	r18, Y+11	; 0x0b
     396:	82 2b       	or	r24, r18
     398:	68 17       	cp	r22, r24
     39a:	79 07       	cpc	r23, r25
     39c:	51 f0       	breq	.+20     	; 0x3b2 <receiveAck+0x94>
     39e:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_clrscr>
     3a2:	60 e0       	ldi	r22, 0x00	; 0
     3a4:	80 e0       	ldi	r24, 0x00	; 0
     3a6:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     3aa:	80 e6       	ldi	r24, 0x60	; 96
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     3b2:	2e 81       	ldd	r18, Y+6	; 0x06
     3b4:	8f 81       	ldd	r24, Y+7	; 0x07
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	a0 e0       	ldi	r26, 0x00	; 0
     3ba:	b0 e0       	ldi	r27, 0x00	; 0
     3bc:	dc 01       	movw	r26, r24
     3be:	99 27       	eor	r25, r25
     3c0:	88 27       	eor	r24, r24
     3c2:	92 2b       	or	r25, r18
     3c4:	2d 81       	ldd	r18, Y+5	; 0x05
     3c6:	82 2b       	or	r24, r18
     3c8:	28 85       	ldd	r18, Y+8	; 0x08
     3ca:	b2 2b       	or	r27, r18
     3cc:	80 93 a0 03 	sts	0x03A0, r24	; 0x8003a0 <rcvParameter>
     3d0:	90 93 a1 03 	sts	0x03A1, r25	; 0x8003a1 <rcvParameter+0x1>
     3d4:	a0 93 a2 03 	sts	0x03A2, r26	; 0x8003a2 <rcvParameter+0x2>
     3d8:	b0 93 a3 03 	sts	0x03A3, r27	; 0x8003a3 <rcvParameter+0x3>
     3dc:	2a 85       	ldd	r18, Y+10	; 0x0a
     3de:	30 e0       	ldi	r19, 0x00	; 0
     3e0:	32 2f       	mov	r19, r18
     3e2:	22 27       	eor	r18, r18
     3e4:	49 85       	ldd	r20, Y+9	; 0x09
     3e6:	24 2b       	or	r18, r20
     3e8:	30 93 9f 01 	sts	0x019F, r19	; 0x80019f <rcvResponse+0x1>
     3ec:	20 93 9e 01 	sts	0x019E, r18	; 0x80019e <rcvResponse>
     3f0:	21 33       	cpi	r18, 0x31	; 49
     3f2:	31 05       	cpc	r19, r1
     3f4:	31 f5       	brne	.+76     	; 0x442 <__DATA_REGION_LENGTH__+0x42>
     3f6:	8a 30       	cpi	r24, 0x0A	; 10
     3f8:	20 e1       	ldi	r18, 0x10	; 16
     3fa:	92 07       	cpc	r25, r18
     3fc:	a1 05       	cpc	r26, r1
     3fe:	b1 05       	cpc	r27, r1
     400:	01 f1       	breq	.+64     	; 0x442 <__DATA_REGION_LENGTH__+0x42>
     402:	82 31       	cpi	r24, 0x12	; 18
     404:	90 41       	sbci	r25, 0x10	; 16
     406:	a1 05       	cpc	r26, r1
     408:	b1 05       	cpc	r27, r1
     40a:	d9 f4       	brne	.+54     	; 0x442 <__DATA_REGION_LENGTH__+0x42>
     40c:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_clrscr>
     410:	60 e0       	ldi	r22, 0x00	; 0
     412:	80 e0       	ldi	r24, 0x00	; 0
     414:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     418:	87 e6       	ldi	r24, 0x67	; 103
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     420:	61 e0       	ldi	r22, 0x01	; 1
     422:	80 e0       	ldi	r24, 0x00	; 0
     424:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     428:	8f e6       	ldi	r24, 0x6F	; 111
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     430:	8f ef       	ldi	r24, 0xFF	; 255
     432:	9f eb       	ldi	r25, 0xBF	; 191
     434:	21 e2       	ldi	r18, 0x21	; 33
     436:	81 50       	subi	r24, 0x01	; 1
     438:	90 40       	sbci	r25, 0x00	; 0
     43a:	20 40       	sbci	r18, 0x00	; 0
     43c:	e1 f7       	brne	.-8      	; 0x436 <__DATA_REGION_LENGTH__+0x36>
     43e:	00 c0       	rjmp	.+0      	; 0x440 <__DATA_REGION_LENGTH__+0x40>
     440:	00 00       	nop
     442:	2c 96       	adiw	r28, 0x0c	; 12
     444:	0f b6       	in	r0, 0x3f	; 63
     446:	f8 94       	cli
     448:	de bf       	out	0x3e, r29	; 62
     44a:	0f be       	out	0x3f, r0	; 63
     44c:	cd bf       	out	0x3d, r28	; 61
     44e:	df 91       	pop	r29
     450:	cf 91       	pop	r28
     452:	08 95       	ret

00000454 <ledOn>:
     454:	41 e0       	ldi	r20, 0x01	; 1
     456:	50 e0       	ldi	r21, 0x00	; 0
     458:	60 e0       	ldi	r22, 0x00	; 0
     45a:	70 e0       	ldi	r23, 0x00	; 0
     45c:	82 e1       	ldi	r24, 0x12	; 18
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	0e 94 4a 01 	call	0x294	; 0x294 <sendCommand>
     464:	0e 94 8f 01 	call	0x31e	; 0x31e <receiveAck>
     468:	08 95       	ret

0000046a <delete_all>:
     46a:	40 e0       	ldi	r20, 0x00	; 0
     46c:	50 e0       	ldi	r21, 0x00	; 0
     46e:	ba 01       	movw	r22, r20
     470:	81 e4       	ldi	r24, 0x41	; 65
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	0e 94 4a 01 	call	0x294	; 0x294 <sendCommand>
     478:	0e 94 8f 01 	call	0x31e	; 0x31e <receiveAck>
     47c:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_clrscr>
     480:	60 e0       	ldi	r22, 0x00	; 0
     482:	80 e0       	ldi	r24, 0x00	; 0
     484:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     488:	8a e7       	ldi	r24, 0x7A	; 122
     48a:	90 e0       	ldi	r25, 0x00	; 0
     48c:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     490:	61 e0       	ldi	r22, 0x01	; 1
     492:	80 e0       	ldi	r24, 0x00	; 0
     494:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     498:	88 e8       	ldi	r24, 0x88	; 136
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     4a0:	2f ef       	ldi	r18, 0xFF	; 255
     4a2:	8f eb       	ldi	r24, 0xBF	; 191
     4a4:	91 e2       	ldi	r25, 0x21	; 33
     4a6:	21 50       	subi	r18, 0x01	; 1
     4a8:	80 40       	sbci	r24, 0x00	; 0
     4aa:	90 40       	sbci	r25, 0x00	; 0
     4ac:	e1 f7       	brne	.-8      	; 0x4a6 <delete_all+0x3c>
     4ae:	00 c0       	rjmp	.+0      	; 0x4b0 <delete_all+0x46>
     4b0:	00 00       	nop
     4b2:	08 95       	ret

000004b4 <is_enrolled>:
     4b4:	ac 01       	movw	r20, r24
     4b6:	99 0f       	add	r25, r25
     4b8:	66 0b       	sbc	r22, r22
     4ba:	77 0b       	sbc	r23, r23
     4bc:	81 e2       	ldi	r24, 0x21	; 33
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	0e 94 4a 01 	call	0x294	; 0x294 <sendCommand>
     4c4:	0e 94 8f 01 	call	0x31e	; 0x31e <receiveAck>
     4c8:	81 e0       	ldi	r24, 0x01	; 1
     4ca:	90 e0       	ldi	r25, 0x00	; 0
     4cc:	20 91 9e 01 	lds	r18, 0x019E	; 0x80019e <rcvResponse>
     4d0:	30 91 9f 01 	lds	r19, 0x019F	; 0x80019f <rcvResponse+0x1>
     4d4:	20 33       	cpi	r18, 0x30	; 48
     4d6:	31 05       	cpc	r19, r1
     4d8:	11 f0       	breq	.+4      	; 0x4de <is_enrolled+0x2a>
     4da:	80 e0       	ldi	r24, 0x00	; 0
     4dc:	90 e0       	ldi	r25, 0x00	; 0
     4de:	08 95       	ret

000004e0 <isFingerPressing>:
     4e0:	40 e0       	ldi	r20, 0x00	; 0
     4e2:	50 e0       	ldi	r21, 0x00	; 0
     4e4:	ba 01       	movw	r22, r20
     4e6:	86 e2       	ldi	r24, 0x26	; 38
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	0e 94 4a 01 	call	0x294	; 0x294 <sendCommand>
     4ee:	0e 94 8f 01 	call	0x31e	; 0x31e <receiveAck>
     4f2:	80 91 a0 03 	lds	r24, 0x03A0	; 0x8003a0 <rcvParameter>
     4f6:	90 91 a1 03 	lds	r25, 0x03A1	; 0x8003a1 <rcvParameter+0x1>
     4fa:	a0 91 a2 03 	lds	r26, 0x03A2	; 0x8003a2 <rcvParameter+0x2>
     4fe:	b0 91 a3 03 	lds	r27, 0x03A3	; 0x8003a3 <rcvParameter+0x3>
     502:	89 2b       	or	r24, r25
     504:	8a 2b       	or	r24, r26
     506:	8b 2b       	or	r24, r27
     508:	49 f4       	brne	.+18     	; 0x51c <isFingerPressing+0x3c>
     50a:	80 b3       	in	r24, 0x10	; 16
     50c:	82 95       	swap	r24
     50e:	86 95       	lsr	r24
     510:	87 70       	andi	r24, 0x07	; 7
     512:	91 e0       	ldi	r25, 0x01	; 1
     514:	89 27       	eor	r24, r25
     516:	81 70       	andi	r24, 0x01	; 1
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	08 95       	ret
     51c:	80 e0       	ldi	r24, 0x00	; 0
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	08 95       	ret

00000522 <enroll>:
     522:	0f 93       	push	r16
     524:	1f 93       	push	r17
     526:	cf 93       	push	r28
     528:	df 93       	push	r29
     52a:	cd b7       	in	r28, 0x3d	; 61
     52c:	de b7       	in	r29, 0x3e	; 62
     52e:	60 97       	sbiw	r28, 0x10	; 16
     530:	0f b6       	in	r0, 0x3f	; 63
     532:	f8 94       	cli
     534:	de bf       	out	0x3e, r29	; 62
     536:	0f be       	out	0x3f, r0	; 63
     538:	cd bf       	out	0x3d, r28	; 61
     53a:	00 e0       	ldi	r16, 0x00	; 0
     53c:	10 e0       	ldi	r17, 0x00	; 0
     53e:	c8 01       	movw	r24, r16
     540:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <is_enrolled>
     544:	89 2b       	or	r24, r25
     546:	39 f0       	breq	.+14     	; 0x556 <enroll+0x34>
     548:	0f 5f       	subi	r16, 0xFF	; 255
     54a:	1f 4f       	sbci	r17, 0xFF	; 255
     54c:	08 3b       	cpi	r16, 0xB8	; 184
     54e:	2b e0       	ldi	r18, 0x0B	; 11
     550:	12 07       	cpc	r17, r18
     552:	a9 f7       	brne	.-22     	; 0x53e <enroll+0x1c>
     554:	04 c0       	rjmp	.+8      	; 0x55e <enroll+0x3c>
     556:	08 3b       	cpi	r16, 0xB8	; 184
     558:	8b e0       	ldi	r24, 0x0B	; 11
     55a:	18 07       	cpc	r17, r24
     55c:	e1 f4       	brne	.+56     	; 0x596 <enroll+0x74>
     55e:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_clrscr>
     562:	60 e0       	ldi	r22, 0x00	; 0
     564:	80 e0       	ldi	r24, 0x00	; 0
     566:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     56a:	80 e6       	ldi	r24, 0x60	; 96
     56c:	90 e0       	ldi	r25, 0x00	; 0
     56e:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     572:	61 e0       	ldi	r22, 0x01	; 1
     574:	80 e0       	ldi	r24, 0x00	; 0
     576:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     57a:	82 e9       	ldi	r24, 0x92	; 146
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     582:	9f ef       	ldi	r25, 0xFF	; 255
     584:	2f ef       	ldi	r18, 0xFF	; 255
     586:	8c e2       	ldi	r24, 0x2C	; 44
     588:	91 50       	subi	r25, 0x01	; 1
     58a:	20 40       	sbci	r18, 0x00	; 0
     58c:	80 40       	sbci	r24, 0x00	; 0
     58e:	e1 f7       	brne	.-8      	; 0x588 <enroll+0x66>
     590:	00 c0       	rjmp	.+0      	; 0x592 <enroll+0x70>
     592:	00 00       	nop
     594:	3c c1       	rjmp	.+632    	; 0x80e <enroll+0x2ec>
     596:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_clrscr>
     59a:	60 e0       	ldi	r22, 0x00	; 0
     59c:	80 e0       	ldi	r24, 0x00	; 0
     59e:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     5a2:	8f e9       	ldi	r24, 0x9F	; 159
     5a4:	90 e0       	ldi	r25, 0x00	; 0
     5a6:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     5aa:	61 e0       	ldi	r22, 0x01	; 1
     5ac:	80 e0       	ldi	r24, 0x00	; 0
     5ae:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     5b2:	8f ea       	ldi	r24, 0xAF	; 175
     5b4:	90 e0       	ldi	r25, 0x00	; 0
     5b6:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     5ba:	09 c0       	rjmp	.+18     	; 0x5ce <enroll+0xac>
     5bc:	9f ef       	ldi	r25, 0xFF	; 255
     5be:	2f ef       	ldi	r18, 0xFF	; 255
     5c0:	88 e0       	ldi	r24, 0x08	; 8
     5c2:	91 50       	subi	r25, 0x01	; 1
     5c4:	20 40       	sbci	r18, 0x00	; 0
     5c6:	80 40       	sbci	r24, 0x00	; 0
     5c8:	e1 f7       	brne	.-8      	; 0x5c2 <enroll+0xa0>
     5ca:	00 c0       	rjmp	.+0      	; 0x5cc <enroll+0xaa>
     5cc:	00 00       	nop
     5ce:	0e 94 70 02 	call	0x4e0	; 0x4e0 <isFingerPressing>
     5d2:	89 2b       	or	r24, r25
     5d4:	99 f3       	breq	.-26     	; 0x5bc <enroll+0x9a>
     5d6:	a8 01       	movw	r20, r16
     5d8:	01 2e       	mov	r0, r17
     5da:	00 0c       	add	r0, r0
     5dc:	66 0b       	sbc	r22, r22
     5de:	77 0b       	sbc	r23, r23
     5e0:	82 e2       	ldi	r24, 0x22	; 34
     5e2:	90 e0       	ldi	r25, 0x00	; 0
     5e4:	0e 94 4a 01 	call	0x294	; 0x294 <sendCommand>
     5e8:	0e 94 8f 01 	call	0x31e	; 0x31e <receiveAck>
     5ec:	41 e0       	ldi	r20, 0x01	; 1
     5ee:	50 e0       	ldi	r21, 0x00	; 0
     5f0:	60 e0       	ldi	r22, 0x00	; 0
     5f2:	70 e0       	ldi	r23, 0x00	; 0
     5f4:	80 e6       	ldi	r24, 0x60	; 96
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	0e 94 4a 01 	call	0x294	; 0x294 <sendCommand>
     5fc:	0e 94 8f 01 	call	0x31e	; 0x31e <receiveAck>
     600:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <rcvResponse>
     604:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <rcvResponse+0x1>
     608:	c1 97       	sbiw	r24, 0x31	; 49
     60a:	71 f4       	brne	.+28     	; 0x628 <enroll+0x106>
     60c:	80 91 a0 03 	lds	r24, 0x03A0	; 0x8003a0 <rcvParameter>
     610:	90 91 a1 03 	lds	r25, 0x03A1	; 0x8003a1 <rcvParameter+0x1>
     614:	a0 91 a2 03 	lds	r26, 0x03A2	; 0x8003a2 <rcvParameter+0x2>
     618:	b0 91 a3 03 	lds	r27, 0x03A3	; 0x8003a3 <rcvParameter+0x3>
     61c:	82 31       	cpi	r24, 0x12	; 18
     61e:	90 41       	sbci	r25, 0x10	; 16
     620:	a1 05       	cpc	r26, r1
     622:	b1 05       	cpc	r27, r1
     624:	09 f4       	brne	.+2      	; 0x628 <enroll+0x106>
     626:	f3 c0       	rjmp	.+486    	; 0x80e <enroll+0x2ec>
     628:	40 e0       	ldi	r20, 0x00	; 0
     62a:	50 e0       	ldi	r21, 0x00	; 0
     62c:	ba 01       	movw	r22, r20
     62e:	83 e2       	ldi	r24, 0x23	; 35
     630:	90 e0       	ldi	r25, 0x00	; 0
     632:	0e 94 4a 01 	call	0x294	; 0x294 <sendCommand>
     636:	0e 94 8f 01 	call	0x31e	; 0x31e <receiveAck>
     63a:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_clrscr>
     63e:	60 e0       	ldi	r22, 0x00	; 0
     640:	80 e0       	ldi	r24, 0x00	; 0
     642:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     646:	83 eb       	ldi	r24, 0xB3	; 179
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     64e:	09 c0       	rjmp	.+18     	; 0x662 <enroll+0x140>
     650:	8f ef       	ldi	r24, 0xFF	; 255
     652:	9f ef       	ldi	r25, 0xFF	; 255
     654:	28 e0       	ldi	r18, 0x08	; 8
     656:	81 50       	subi	r24, 0x01	; 1
     658:	90 40       	sbci	r25, 0x00	; 0
     65a:	20 40       	sbci	r18, 0x00	; 0
     65c:	e1 f7       	brne	.-8      	; 0x656 <enroll+0x134>
     65e:	00 c0       	rjmp	.+0      	; 0x660 <enroll+0x13e>
     660:	00 00       	nop
     662:	0e 94 70 02 	call	0x4e0	; 0x4e0 <isFingerPressing>
     666:	01 97       	sbiw	r24, 0x01	; 1
     668:	99 f3       	breq	.-26     	; 0x650 <enroll+0x12e>
     66a:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_clrscr>
     66e:	60 e0       	ldi	r22, 0x00	; 0
     670:	80 e0       	ldi	r24, 0x00	; 0
     672:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     676:	8f e9       	ldi	r24, 0x9F	; 159
     678:	90 e0       	ldi	r25, 0x00	; 0
     67a:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     67e:	61 e0       	ldi	r22, 0x01	; 1
     680:	80 e0       	ldi	r24, 0x00	; 0
     682:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     686:	81 ec       	ldi	r24, 0xC1	; 193
     688:	90 e0       	ldi	r25, 0x00	; 0
     68a:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     68e:	09 c0       	rjmp	.+18     	; 0x6a2 <enroll+0x180>
     690:	8f ef       	ldi	r24, 0xFF	; 255
     692:	9f ef       	ldi	r25, 0xFF	; 255
     694:	28 e0       	ldi	r18, 0x08	; 8
     696:	81 50       	subi	r24, 0x01	; 1
     698:	90 40       	sbci	r25, 0x00	; 0
     69a:	20 40       	sbci	r18, 0x00	; 0
     69c:	e1 f7       	brne	.-8      	; 0x696 <enroll+0x174>
     69e:	00 c0       	rjmp	.+0      	; 0x6a0 <enroll+0x17e>
     6a0:	00 00       	nop
     6a2:	0e 94 70 02 	call	0x4e0	; 0x4e0 <isFingerPressing>
     6a6:	89 2b       	or	r24, r25
     6a8:	99 f3       	breq	.-26     	; 0x690 <enroll+0x16e>
     6aa:	41 e0       	ldi	r20, 0x01	; 1
     6ac:	50 e0       	ldi	r21, 0x00	; 0
     6ae:	60 e0       	ldi	r22, 0x00	; 0
     6b0:	70 e0       	ldi	r23, 0x00	; 0
     6b2:	80 e6       	ldi	r24, 0x60	; 96
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	0e 94 4a 01 	call	0x294	; 0x294 <sendCommand>
     6ba:	0e 94 8f 01 	call	0x31e	; 0x31e <receiveAck>
     6be:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <rcvResponse>
     6c2:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <rcvResponse+0x1>
     6c6:	c1 97       	sbiw	r24, 0x31	; 49
     6c8:	71 f4       	brne	.+28     	; 0x6e6 <enroll+0x1c4>
     6ca:	80 91 a0 03 	lds	r24, 0x03A0	; 0x8003a0 <rcvParameter>
     6ce:	90 91 a1 03 	lds	r25, 0x03A1	; 0x8003a1 <rcvParameter+0x1>
     6d2:	a0 91 a2 03 	lds	r26, 0x03A2	; 0x8003a2 <rcvParameter+0x2>
     6d6:	b0 91 a3 03 	lds	r27, 0x03A3	; 0x8003a3 <rcvParameter+0x3>
     6da:	82 31       	cpi	r24, 0x12	; 18
     6dc:	90 41       	sbci	r25, 0x10	; 16
     6de:	a1 05       	cpc	r26, r1
     6e0:	b1 05       	cpc	r27, r1
     6e2:	09 f4       	brne	.+2      	; 0x6e6 <enroll+0x1c4>
     6e4:	94 c0       	rjmp	.+296    	; 0x80e <enroll+0x2ec>
     6e6:	40 e0       	ldi	r20, 0x00	; 0
     6e8:	50 e0       	ldi	r21, 0x00	; 0
     6ea:	ba 01       	movw	r22, r20
     6ec:	84 e2       	ldi	r24, 0x24	; 36
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	0e 94 4a 01 	call	0x294	; 0x294 <sendCommand>
     6f4:	0e 94 8f 01 	call	0x31e	; 0x31e <receiveAck>
     6f8:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_clrscr>
     6fc:	60 e0       	ldi	r22, 0x00	; 0
     6fe:	80 e0       	ldi	r24, 0x00	; 0
     700:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     704:	83 eb       	ldi	r24, 0xB3	; 179
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     70c:	09 c0       	rjmp	.+18     	; 0x720 <enroll+0x1fe>
     70e:	8f ef       	ldi	r24, 0xFF	; 255
     710:	9f ef       	ldi	r25, 0xFF	; 255
     712:	28 e0       	ldi	r18, 0x08	; 8
     714:	81 50       	subi	r24, 0x01	; 1
     716:	90 40       	sbci	r25, 0x00	; 0
     718:	20 40       	sbci	r18, 0x00	; 0
     71a:	e1 f7       	brne	.-8      	; 0x714 <enroll+0x1f2>
     71c:	00 c0       	rjmp	.+0      	; 0x71e <enroll+0x1fc>
     71e:	00 00       	nop
     720:	0e 94 70 02 	call	0x4e0	; 0x4e0 <isFingerPressing>
     724:	01 97       	sbiw	r24, 0x01	; 1
     726:	99 f3       	breq	.-26     	; 0x70e <enroll+0x1ec>
     728:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_clrscr>
     72c:	60 e0       	ldi	r22, 0x00	; 0
     72e:	80 e0       	ldi	r24, 0x00	; 0
     730:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     734:	8f e9       	ldi	r24, 0x9F	; 159
     736:	90 e0       	ldi	r25, 0x00	; 0
     738:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     73c:	61 e0       	ldi	r22, 0x01	; 1
     73e:	80 e0       	ldi	r24, 0x00	; 0
     740:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     744:	85 ec       	ldi	r24, 0xC5	; 197
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     74c:	09 c0       	rjmp	.+18     	; 0x760 <enroll+0x23e>
     74e:	8f ef       	ldi	r24, 0xFF	; 255
     750:	9f ef       	ldi	r25, 0xFF	; 255
     752:	28 e0       	ldi	r18, 0x08	; 8
     754:	81 50       	subi	r24, 0x01	; 1
     756:	90 40       	sbci	r25, 0x00	; 0
     758:	20 40       	sbci	r18, 0x00	; 0
     75a:	e1 f7       	brne	.-8      	; 0x754 <enroll+0x232>
     75c:	00 c0       	rjmp	.+0      	; 0x75e <enroll+0x23c>
     75e:	00 00       	nop
     760:	0e 94 70 02 	call	0x4e0	; 0x4e0 <isFingerPressing>
     764:	89 2b       	or	r24, r25
     766:	99 f3       	breq	.-26     	; 0x74e <enroll+0x22c>
     768:	41 e0       	ldi	r20, 0x01	; 1
     76a:	50 e0       	ldi	r21, 0x00	; 0
     76c:	60 e0       	ldi	r22, 0x00	; 0
     76e:	70 e0       	ldi	r23, 0x00	; 0
     770:	80 e6       	ldi	r24, 0x60	; 96
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	0e 94 4a 01 	call	0x294	; 0x294 <sendCommand>
     778:	0e 94 8f 01 	call	0x31e	; 0x31e <receiveAck>
     77c:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <rcvResponse>
     780:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <rcvResponse+0x1>
     784:	c1 97       	sbiw	r24, 0x31	; 49
     786:	69 f4       	brne	.+26     	; 0x7a2 <enroll+0x280>
     788:	80 91 a0 03 	lds	r24, 0x03A0	; 0x8003a0 <rcvParameter>
     78c:	90 91 a1 03 	lds	r25, 0x03A1	; 0x8003a1 <rcvParameter+0x1>
     790:	a0 91 a2 03 	lds	r26, 0x03A2	; 0x8003a2 <rcvParameter+0x2>
     794:	b0 91 a3 03 	lds	r27, 0x03A3	; 0x8003a3 <rcvParameter+0x3>
     798:	82 31       	cpi	r24, 0x12	; 18
     79a:	90 41       	sbci	r25, 0x10	; 16
     79c:	a1 05       	cpc	r26, r1
     79e:	b1 05       	cpc	r27, r1
     7a0:	b1 f1       	breq	.+108    	; 0x80e <enroll+0x2ec>
     7a2:	40 e0       	ldi	r20, 0x00	; 0
     7a4:	50 e0       	ldi	r21, 0x00	; 0
     7a6:	ba 01       	movw	r22, r20
     7a8:	85 e2       	ldi	r24, 0x25	; 37
     7aa:	90 e0       	ldi	r25, 0x00	; 0
     7ac:	0e 94 4a 01 	call	0x294	; 0x294 <sendCommand>
     7b0:	0e 94 8f 01 	call	0x31e	; 0x31e <receiveAck>
     7b4:	1f 93       	push	r17
     7b6:	0f 93       	push	r16
     7b8:	89 ec       	ldi	r24, 0xC9	; 201
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	9f 93       	push	r25
     7be:	8f 93       	push	r24
     7c0:	8e 01       	movw	r16, r28
     7c2:	0f 5f       	subi	r16, 0xFF	; 255
     7c4:	1f 4f       	sbci	r17, 0xFF	; 255
     7c6:	1f 93       	push	r17
     7c8:	0f 93       	push	r16
     7ca:	0e 94 9b 05 	call	0xb36	; 0xb36 <sprintf>
     7ce:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_clrscr>
     7d2:	60 e0       	ldi	r22, 0x00	; 0
     7d4:	80 e0       	ldi	r24, 0x00	; 0
     7d6:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     7da:	c8 01       	movw	r24, r16
     7dc:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     7e0:	61 e0       	ldi	r22, 0x01	; 1
     7e2:	80 e0       	ldi	r24, 0x00	; 0
     7e4:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     7e8:	85 ed       	ldi	r24, 0xD5	; 213
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     7f0:	8f ef       	ldi	r24, 0xFF	; 255
     7f2:	9f eb       	ldi	r25, 0xBF	; 191
     7f4:	21 e2       	ldi	r18, 0x21	; 33
     7f6:	81 50       	subi	r24, 0x01	; 1
     7f8:	90 40       	sbci	r25, 0x00	; 0
     7fa:	20 40       	sbci	r18, 0x00	; 0
     7fc:	e1 f7       	brne	.-8      	; 0x7f6 <enroll+0x2d4>
     7fe:	00 c0       	rjmp	.+0      	; 0x800 <enroll+0x2de>
     800:	00 00       	nop
     802:	0f 90       	pop	r0
     804:	0f 90       	pop	r0
     806:	0f 90       	pop	r0
     808:	0f 90       	pop	r0
     80a:	0f 90       	pop	r0
     80c:	0f 90       	pop	r0
     80e:	60 96       	adiw	r28, 0x10	; 16
     810:	0f b6       	in	r0, 0x3f	; 63
     812:	f8 94       	cli
     814:	de bf       	out	0x3e, r29	; 62
     816:	0f be       	out	0x3f, r0	; 63
     818:	cd bf       	out	0x3d, r28	; 61
     81a:	df 91       	pop	r29
     81c:	cf 91       	pop	r28
     81e:	1f 91       	pop	r17
     820:	0f 91       	pop	r16
     822:	08 95       	ret

00000824 <identify_fingerprint>:
     824:	0f 93       	push	r16
     826:	1f 93       	push	r17
     828:	cf 93       	push	r28
     82a:	df 93       	push	r29
     82c:	cd b7       	in	r28, 0x3d	; 61
     82e:	de b7       	in	r29, 0x3e	; 62
     830:	60 97       	sbiw	r28, 0x10	; 16
     832:	0f b6       	in	r0, 0x3f	; 63
     834:	f8 94       	cli
     836:	de bf       	out	0x3e, r29	; 62
     838:	0f be       	out	0x3f, r0	; 63
     83a:	cd bf       	out	0x3d, r28	; 61
     83c:	8c 01       	movw	r16, r24
     83e:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_clrscr>
     842:	60 e0       	ldi	r22, 0x00	; 0
     844:	80 e0       	ldi	r24, 0x00	; 0
     846:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     84a:	8c ed       	ldi	r24, 0xDC	; 220
     84c:	90 e0       	ldi	r25, 0x00	; 0
     84e:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     852:	09 c0       	rjmp	.+18     	; 0x866 <identify_fingerprint+0x42>
     854:	2f ef       	ldi	r18, 0xFF	; 255
     856:	8f ef       	ldi	r24, 0xFF	; 255
     858:	98 e0       	ldi	r25, 0x08	; 8
     85a:	21 50       	subi	r18, 0x01	; 1
     85c:	80 40       	sbci	r24, 0x00	; 0
     85e:	90 40       	sbci	r25, 0x00	; 0
     860:	e1 f7       	brne	.-8      	; 0x85a <identify_fingerprint+0x36>
     862:	00 c0       	rjmp	.+0      	; 0x864 <identify_fingerprint+0x40>
     864:	00 00       	nop
     866:	0e 94 70 02 	call	0x4e0	; 0x4e0 <isFingerPressing>
     86a:	89 2b       	or	r24, r25
     86c:	99 f3       	breq	.-26     	; 0x854 <identify_fingerprint+0x30>
     86e:	41 e0       	ldi	r20, 0x01	; 1
     870:	50 e0       	ldi	r21, 0x00	; 0
     872:	60 e0       	ldi	r22, 0x00	; 0
     874:	70 e0       	ldi	r23, 0x00	; 0
     876:	80 e6       	ldi	r24, 0x60	; 96
     878:	90 e0       	ldi	r25, 0x00	; 0
     87a:	0e 94 4a 01 	call	0x294	; 0x294 <sendCommand>
     87e:	0e 94 8f 01 	call	0x31e	; 0x31e <receiveAck>
     882:	41 e0       	ldi	r20, 0x01	; 1
     884:	50 e0       	ldi	r21, 0x00	; 0
     886:	60 e0       	ldi	r22, 0x00	; 0
     888:	70 e0       	ldi	r23, 0x00	; 0
     88a:	81 e5       	ldi	r24, 0x51	; 81
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	0e 94 4a 01 	call	0x294	; 0x294 <sendCommand>
     892:	0e 94 8f 01 	call	0x31e	; 0x31e <receiveAck>
     896:	01 2b       	or	r16, r17
     898:	09 f0       	breq	.+2      	; 0x89c <identify_fingerprint+0x78>
     89a:	47 c0       	rjmp	.+142    	; 0x92a <identify_fingerprint+0x106>
     89c:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <rcvResponse>
     8a0:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <rcvResponse+0x1>
     8a4:	c0 97       	sbiw	r24, 0x30	; 48
     8a6:	99 f0       	breq	.+38     	; 0x8ce <identify_fingerprint+0xaa>
     8a8:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_clrscr>
     8ac:	60 e0       	ldi	r22, 0x00	; 0
     8ae:	80 e0       	ldi	r24, 0x00	; 0
     8b0:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     8b4:	8a ee       	ldi	r24, 0xEA	; 234
     8b6:	90 e0       	ldi	r25, 0x00	; 0
     8b8:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     8bc:	61 e0       	ldi	r22, 0x01	; 1
     8be:	80 e0       	ldi	r24, 0x00	; 0
     8c0:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     8c4:	88 e0       	ldi	r24, 0x08	; 8
     8c6:	91 e0       	ldi	r25, 0x01	; 1
     8c8:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     8cc:	3c c0       	rjmp	.+120    	; 0x946 <identify_fingerprint+0x122>
     8ce:	80 91 a3 03 	lds	r24, 0x03A3	; 0x8003a3 <rcvParameter+0x3>
     8d2:	8f 93       	push	r24
     8d4:	80 91 a2 03 	lds	r24, 0x03A2	; 0x8003a2 <rcvParameter+0x2>
     8d8:	8f 93       	push	r24
     8da:	80 91 a1 03 	lds	r24, 0x03A1	; 0x8003a1 <rcvParameter+0x1>
     8de:	8f 93       	push	r24
     8e0:	80 91 a0 03 	lds	r24, 0x03A0	; 0x8003a0 <rcvParameter>
     8e4:	8f 93       	push	r24
     8e6:	88 ef       	ldi	r24, 0xF8	; 248
     8e8:	90 e0       	ldi	r25, 0x00	; 0
     8ea:	9f 93       	push	r25
     8ec:	8f 93       	push	r24
     8ee:	8e 01       	movw	r16, r28
     8f0:	0f 5f       	subi	r16, 0xFF	; 255
     8f2:	1f 4f       	sbci	r17, 0xFF	; 255
     8f4:	1f 93       	push	r17
     8f6:	0f 93       	push	r16
     8f8:	0e 94 9b 05 	call	0xb36	; 0xb36 <sprintf>
     8fc:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_clrscr>
     900:	60 e0       	ldi	r22, 0x00	; 0
     902:	80 e0       	ldi	r24, 0x00	; 0
     904:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     908:	c8 01       	movw	r24, r16
     90a:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     90e:	61 e0       	ldi	r22, 0x01	; 1
     910:	80 e0       	ldi	r24, 0x00	; 0
     912:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     916:	85 e0       	ldi	r24, 0x05	; 5
     918:	91 e0       	ldi	r25, 0x01	; 1
     91a:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     91e:	0f b6       	in	r0, 0x3f	; 63
     920:	f8 94       	cli
     922:	de bf       	out	0x3e, r29	; 62
     924:	0f be       	out	0x3f, r0	; 63
     926:	cd bf       	out	0x3d, r28	; 61
     928:	0e c0       	rjmp	.+28     	; 0x946 <identify_fingerprint+0x122>
     92a:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <rcvResponse>
     92e:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <rcvResponse+0x1>
     932:	c0 97       	sbiw	r24, 0x30	; 48
     934:	29 f4       	brne	.+10     	; 0x940 <identify_fingerprint+0x11c>
     936:	80 91 a0 03 	lds	r24, 0x03A0	; 0x8003a0 <rcvParameter>
     93a:	90 91 a1 03 	lds	r25, 0x03A1	; 0x8003a1 <rcvParameter+0x1>
     93e:	0d c0       	rjmp	.+26     	; 0x95a <identify_fingerprint+0x136>
     940:	8f ef       	ldi	r24, 0xFF	; 255
     942:	9f ef       	ldi	r25, 0xFF	; 255
     944:	0a c0       	rjmp	.+20     	; 0x95a <identify_fingerprint+0x136>
     946:	9f ef       	ldi	r25, 0xFF	; 255
     948:	2f e7       	ldi	r18, 0x7F	; 127
     94a:	83 e4       	ldi	r24, 0x43	; 67
     94c:	91 50       	subi	r25, 0x01	; 1
     94e:	20 40       	sbci	r18, 0x00	; 0
     950:	80 40       	sbci	r24, 0x00	; 0
     952:	e1 f7       	brne	.-8      	; 0x94c <identify_fingerprint+0x128>
     954:	00 c0       	rjmp	.+0      	; 0x956 <identify_fingerprint+0x132>
     956:	00 00       	nop
     958:	e8 cf       	rjmp	.-48     	; 0x92a <identify_fingerprint+0x106>
     95a:	60 96       	adiw	r28, 0x10	; 16
     95c:	0f b6       	in	r0, 0x3f	; 63
     95e:	f8 94       	cli
     960:	de bf       	out	0x3e, r29	; 62
     962:	0f be       	out	0x3f, r0	; 63
     964:	cd bf       	out	0x3d, r28	; 61
     966:	df 91       	pop	r29
     968:	cf 91       	pop	r28
     96a:	1f 91       	pop	r17
     96c:	0f 91       	pop	r16
     96e:	08 95       	ret

00000970 <delete_user>:
     970:	0f 93       	push	r16
     972:	1f 93       	push	r17
     974:	cf 93       	push	r28
     976:	df 93       	push	r29
     978:	cd b7       	in	r28, 0x3d	; 61
     97a:	de b7       	in	r29, 0x3e	; 62
     97c:	60 97       	sbiw	r28, 0x10	; 16
     97e:	0f b6       	in	r0, 0x3f	; 63
     980:	f8 94       	cli
     982:	de bf       	out	0x3e, r29	; 62
     984:	0f be       	out	0x3f, r0	; 63
     986:	cd bf       	out	0x3d, r28	; 61
     988:	81 e0       	ldi	r24, 0x01	; 1
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	0e 94 12 04 	call	0x824	; 0x824 <identify_fingerprint>
     990:	8c 01       	movw	r16, r24
     992:	8f 3f       	cpi	r24, 0xFF	; 255
     994:	2f ef       	ldi	r18, 0xFF	; 255
     996:	92 07       	cpc	r25, r18
     998:	e1 f4       	brne	.+56     	; 0x9d2 <delete_user+0x62>
     99a:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_clrscr>
     99e:	60 e0       	ldi	r22, 0x00	; 0
     9a0:	80 e0       	ldi	r24, 0x00	; 0
     9a2:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     9a6:	8a ee       	ldi	r24, 0xEA	; 234
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     9ae:	61 e0       	ldi	r22, 0x01	; 1
     9b0:	80 e0       	ldi	r24, 0x00	; 0
     9b2:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     9b6:	88 e0       	ldi	r24, 0x08	; 8
     9b8:	91 e0       	ldi	r25, 0x01	; 1
     9ba:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     9be:	8f ef       	ldi	r24, 0xFF	; 255
     9c0:	9f eb       	ldi	r25, 0xBF	; 191
     9c2:	21 e2       	ldi	r18, 0x21	; 33
     9c4:	81 50       	subi	r24, 0x01	; 1
     9c6:	90 40       	sbci	r25, 0x00	; 0
     9c8:	20 40       	sbci	r18, 0x00	; 0
     9ca:	e1 f7       	brne	.-8      	; 0x9c4 <delete_user+0x54>
     9cc:	00 c0       	rjmp	.+0      	; 0x9ce <delete_user+0x5e>
     9ce:	00 00       	nop
     9d0:	37 c0       	rjmp	.+110    	; 0xa40 <delete_user+0xd0>
     9d2:	ac 01       	movw	r20, r24
     9d4:	99 0f       	add	r25, r25
     9d6:	66 0b       	sbc	r22, r22
     9d8:	77 0b       	sbc	r23, r23
     9da:	80 e4       	ldi	r24, 0x40	; 64
     9dc:	90 e0       	ldi	r25, 0x00	; 0
     9de:	0e 94 4a 01 	call	0x294	; 0x294 <sendCommand>
     9e2:	0e 94 8f 01 	call	0x31e	; 0x31e <receiveAck>
     9e6:	1f 93       	push	r17
     9e8:	0f 93       	push	r16
     9ea:	89 ec       	ldi	r24, 0xC9	; 201
     9ec:	90 e0       	ldi	r25, 0x00	; 0
     9ee:	9f 93       	push	r25
     9f0:	8f 93       	push	r24
     9f2:	8e 01       	movw	r16, r28
     9f4:	0f 5f       	subi	r16, 0xFF	; 255
     9f6:	1f 4f       	sbci	r17, 0xFF	; 255
     9f8:	1f 93       	push	r17
     9fa:	0f 93       	push	r16
     9fc:	0e 94 9b 05 	call	0xb36	; 0xb36 <sprintf>
     a00:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_clrscr>
     a04:	60 e0       	ldi	r22, 0x00	; 0
     a06:	80 e0       	ldi	r24, 0x00	; 0
     a08:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     a0c:	c8 01       	movw	r24, r16
     a0e:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     a12:	61 e0       	ldi	r22, 0x01	; 1
     a14:	80 e0       	ldi	r24, 0x00	; 0
     a16:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
     a1a:	82 e1       	ldi	r24, 0x12	; 18
     a1c:	91 e0       	ldi	r25, 0x01	; 1
     a1e:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     a22:	8f ef       	ldi	r24, 0xFF	; 255
     a24:	9f eb       	ldi	r25, 0xBF	; 191
     a26:	21 e2       	ldi	r18, 0x21	; 33
     a28:	81 50       	subi	r24, 0x01	; 1
     a2a:	90 40       	sbci	r25, 0x00	; 0
     a2c:	20 40       	sbci	r18, 0x00	; 0
     a2e:	e1 f7       	brne	.-8      	; 0xa28 <delete_user+0xb8>
     a30:	00 c0       	rjmp	.+0      	; 0xa32 <delete_user+0xc2>
     a32:	00 00       	nop
     a34:	0f 90       	pop	r0
     a36:	0f 90       	pop	r0
     a38:	0f 90       	pop	r0
     a3a:	0f 90       	pop	r0
     a3c:	0f 90       	pop	r0
     a3e:	0f 90       	pop	r0
     a40:	60 96       	adiw	r28, 0x10	; 16
     a42:	0f b6       	in	r0, 0x3f	; 63
     a44:	f8 94       	cli
     a46:	de bf       	out	0x3e, r29	; 62
     a48:	0f be       	out	0x3f, r0	; 63
     a4a:	cd bf       	out	0x3d, r28	; 61
     a4c:	df 91       	pop	r29
     a4e:	cf 91       	pop	r28
     a50:	1f 91       	pop	r17
     a52:	0f 91       	pop	r16
     a54:	08 95       	ret

00000a56 <init_fingerprint_scanner>:
     a56:	2f ef       	ldi	r18, 0xFF	; 255
     a58:	8f e3       	ldi	r24, 0x3F	; 63
     a5a:	92 e0       	ldi	r25, 0x02	; 2
     a5c:	21 50       	subi	r18, 0x01	; 1
     a5e:	80 40       	sbci	r24, 0x00	; 0
     a60:	90 40       	sbci	r25, 0x00	; 0
     a62:	e1 f7       	brne	.-8      	; 0xa5c <init_fingerprint_scanner+0x6>
     a64:	00 c0       	rjmp	.+0      	; 0xa66 <init_fingerprint_scanner+0x10>
     a66:	00 00       	nop
     a68:	40 e0       	ldi	r20, 0x00	; 0
     a6a:	50 e0       	ldi	r21, 0x00	; 0
     a6c:	ba 01       	movw	r22, r20
     a6e:	81 e0       	ldi	r24, 0x01	; 1
     a70:	90 e0       	ldi	r25, 0x00	; 0
     a72:	0e 94 4a 01 	call	0x294	; 0x294 <sendCommand>
     a76:	2f ef       	ldi	r18, 0xFF	; 255
     a78:	8f e3       	ldi	r24, 0x3F	; 63
     a7a:	92 e0       	ldi	r25, 0x02	; 2
     a7c:	21 50       	subi	r18, 0x01	; 1
     a7e:	80 40       	sbci	r24, 0x00	; 0
     a80:	90 40       	sbci	r25, 0x00	; 0
     a82:	e1 f7       	brne	.-8      	; 0xa7c <init_fingerprint_scanner+0x26>
     a84:	00 c0       	rjmp	.+0      	; 0xa86 <init_fingerprint_scanner+0x30>
     a86:	00 00       	nop
     a88:	0e 94 8f 01 	call	0x31e	; 0x31e <receiveAck>
     a8c:	08 95       	ret

00000a8e <message>:




void message(){
	lcd_clrscr();
     a8e:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_clrscr>
	lcd_gotoxy(0, 0);
     a92:	60 e0       	ldi	r22, 0x00	; 0
     a94:	80 e0       	ldi	r24, 0x00	; 0
     a96:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
	lcd_puts("Sustav");
     a9a:	8a e8       	ldi	r24, 0x8A	; 138
     a9c:	91 e0       	ldi	r25, 0x01	; 1
     a9e:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
	
	lcd_gotoxy(0, 1);
     aa2:	61 e0       	ldi	r22, 0x01	; 1
     aa4:	80 e0       	ldi	r24, 0x00	; 0
     aa6:	0e 94 9b 00 	call	0x136	; 0x136 <lcd_gotoxy>
	lcd_puts("pokrenut");
     aaa:	81 e9       	ldi	r24, 0x91	; 145
     aac:	91 e0       	ldi	r25, 0x01	; 1
     aae:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts>
     ab2:	08 95       	ret

00000ab4 <main>:



int main(void)
{
	DDRB = 0xff;
     ab4:	8f ef       	ldi	r24, 0xFF	; 255
     ab6:	87 bb       	out	0x17, r24	; 23
	PORTB = 0x0f;
     ab8:	8f e0       	ldi	r24, 0x0F	; 15
     aba:	88 bb       	out	0x18, r24	; 24
	
	PORTD = (1 << 6);
     abc:	80 e4       	ldi	r24, 0x40	; 64
     abe:	82 bb       	out	0x12, r24	; 18
	DDRD = (1 << 4) | (1 << 6);
     ac0:	80 e5       	ldi	r24, 0x50	; 80
     ac2:	81 bb       	out	0x11, r24	; 17

	TCCR1A = (1 << COM1B1) | (1 << WGM10);
     ac4:	81 e2       	ldi	r24, 0x21	; 33
     ac6:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = (1 << WGM12) | (1 << CS11);
     ac8:	8a e0       	ldi	r24, 0x0A	; 10
     aca:	8e bd       	out	0x2e, r24	; 46
	OCR1B = 60;
     acc:	8c e3       	ldi	r24, 0x3C	; 60
     ace:	90 e0       	ldi	r25, 0x00	; 0
     ad0:	99 bd       	out	0x29, r25	; 41
     ad2:	88 bd       	out	0x28, r24	; 40

	lcd_init(LCD_DISP_ON);
     ad4:	8c e0       	ldi	r24, 0x0C	; 12
     ad6:	0e 94 ce 00 	call	0x19c	; 0x19c <lcd_init>
	lcd_clrscr();
     ada:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_clrscr>

	UBRRH = (unsigned char)(BAUDRATE>>8);
     ade:	10 bc       	out	0x20, r1	; 32
	UBRRL = (unsigned char)BAUDRATE;
     ae0:	8f e2       	ldi	r24, 0x2F	; 47
     ae2:	89 b9       	out	0x09, r24	; 9

	UCSRB = (1 << RXEN) | (1 << TXEN) | (1 << RXCIE);
     ae4:	88 e9       	ldi	r24, 0x98	; 152
     ae6:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL) | (1 << UCSZ1) | (1 << UCSZ0);
     ae8:	86 e8       	ldi	r24, 0x86	; 134
     aea:	80 bd       	out	0x20, r24	; 32

	sei();
     aec:	78 94       	sei
	init_fingerprint_scanner();
     aee:	0e 94 2b 05 	call	0xa56	; 0xa56 <init_fingerprint_scanner>
	ledOn();
     af2:	0e 94 2a 02 	call	0x454	; 0x454 <ledOn>
	
	while(1){
		if((PINB & 0x01) == 0){
     af6:	b0 99       	sbic	0x16, 0	; 22
     af8:	05 c0       	rjmp	.+10     	; 0xb04 <main+0x50>
			identify_fingerprint(0);
     afa:	80 e0       	ldi	r24, 0x00	; 0
     afc:	90 e0       	ldi	r25, 0x00	; 0
     afe:	0e 94 12 04 	call	0x824	; 0x824 <identify_fingerprint>
     b02:	0d c0       	rjmp	.+26     	; 0xb1e <main+0x6a>
			//play_game();
			}else if((PINB & 0x02) == 0){
     b04:	b1 99       	sbic	0x16, 1	; 22
     b06:	03 c0       	rjmp	.+6      	; 0xb0e <main+0x5a>
			enroll();
     b08:	0e 94 91 02 	call	0x522	; 0x522 <enroll>
     b0c:	08 c0       	rjmp	.+16     	; 0xb1e <main+0x6a>
			}else if((PINB & 0x04) == 0){
     b0e:	b2 99       	sbic	0x16, 2	; 22
     b10:	03 c0       	rjmp	.+6      	; 0xb18 <main+0x64>
			delete_user();
     b12:	0e 94 b8 04 	call	0x970	; 0x970 <delete_user>
     b16:	03 c0       	rjmp	.+6      	; 0xb1e <main+0x6a>
			}else if((PINB & 0x08) == 0){
     b18:	b3 9b       	sbis	0x16, 3	; 22
			delete_all();
     b1a:	0e 94 35 02 	call	0x46a	; 0x46a <delete_all>
		}
		
		message();
     b1e:	0e 94 47 05 	call	0xa8e	; 0xa8e <message>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b22:	2f ef       	ldi	r18, 0xFF	; 255
     b24:	8f ef       	ldi	r24, 0xFF	; 255
     b26:	93 e2       	ldi	r25, 0x23	; 35
     b28:	21 50       	subi	r18, 0x01	; 1
     b2a:	80 40       	sbci	r24, 0x00	; 0
     b2c:	90 40       	sbci	r25, 0x00	; 0
     b2e:	e1 f7       	brne	.-8      	; 0xb28 <main+0x74>
     b30:	00 c0       	rjmp	.+0      	; 0xb32 <main+0x7e>
     b32:	00 00       	nop
     b34:	e0 cf       	rjmp	.-64     	; 0xaf6 <main+0x42>

00000b36 <sprintf>:
     b36:	ae e0       	ldi	r26, 0x0E	; 14
     b38:	b0 e0       	ldi	r27, 0x00	; 0
     b3a:	e1 ea       	ldi	r30, 0xA1	; 161
     b3c:	f5 e0       	ldi	r31, 0x05	; 5
     b3e:	0c 94 5c 08 	jmp	0x10b8	; 0x10b8 <__prologue_saves__+0x1c>
     b42:	0d 89       	ldd	r16, Y+21	; 0x15
     b44:	1e 89       	ldd	r17, Y+22	; 0x16
     b46:	86 e0       	ldi	r24, 0x06	; 6
     b48:	8c 83       	std	Y+4, r24	; 0x04
     b4a:	1a 83       	std	Y+2, r17	; 0x02
     b4c:	09 83       	std	Y+1, r16	; 0x01
     b4e:	8f ef       	ldi	r24, 0xFF	; 255
     b50:	9f e7       	ldi	r25, 0x7F	; 127
     b52:	9e 83       	std	Y+6, r25	; 0x06
     b54:	8d 83       	std	Y+5, r24	; 0x05
     b56:	ae 01       	movw	r20, r28
     b58:	47 5e       	subi	r20, 0xE7	; 231
     b5a:	5f 4f       	sbci	r21, 0xFF	; 255
     b5c:	6f 89       	ldd	r22, Y+23	; 0x17
     b5e:	78 8d       	ldd	r23, Y+24	; 0x18
     b60:	ce 01       	movw	r24, r28
     b62:	01 96       	adiw	r24, 0x01	; 1
     b64:	0e 94 bd 05 	call	0xb7a	; 0xb7a <vfprintf>
     b68:	ef 81       	ldd	r30, Y+7	; 0x07
     b6a:	f8 85       	ldd	r31, Y+8	; 0x08
     b6c:	e0 0f       	add	r30, r16
     b6e:	f1 1f       	adc	r31, r17
     b70:	10 82       	st	Z, r1
     b72:	2e 96       	adiw	r28, 0x0e	; 14
     b74:	e4 e0       	ldi	r30, 0x04	; 4
     b76:	0c 94 78 08 	jmp	0x10f0	; 0x10f0 <__epilogue_restores__+0x1c>

00000b7a <vfprintf>:
     b7a:	ab e0       	ldi	r26, 0x0B	; 11
     b7c:	b0 e0       	ldi	r27, 0x00	; 0
     b7e:	e3 ec       	ldi	r30, 0xC3	; 195
     b80:	f5 e0       	ldi	r31, 0x05	; 5
     b82:	0c 94 4e 08 	jmp	0x109c	; 0x109c <__prologue_saves__>
     b86:	6c 01       	movw	r12, r24
     b88:	7b 01       	movw	r14, r22
     b8a:	8a 01       	movw	r16, r20
     b8c:	fc 01       	movw	r30, r24
     b8e:	17 82       	std	Z+7, r1	; 0x07
     b90:	16 82       	std	Z+6, r1	; 0x06
     b92:	83 81       	ldd	r24, Z+3	; 0x03
     b94:	81 ff       	sbrs	r24, 1
     b96:	cc c1       	rjmp	.+920    	; 0xf30 <vfprintf+0x3b6>
     b98:	ce 01       	movw	r24, r28
     b9a:	01 96       	adiw	r24, 0x01	; 1
     b9c:	3c 01       	movw	r6, r24
     b9e:	f6 01       	movw	r30, r12
     ba0:	93 81       	ldd	r25, Z+3	; 0x03
     ba2:	f7 01       	movw	r30, r14
     ba4:	93 fd       	sbrc	r25, 3
     ba6:	85 91       	lpm	r24, Z+
     ba8:	93 ff       	sbrs	r25, 3
     baa:	81 91       	ld	r24, Z+
     bac:	7f 01       	movw	r14, r30
     bae:	88 23       	and	r24, r24
     bb0:	09 f4       	brne	.+2      	; 0xbb4 <vfprintf+0x3a>
     bb2:	ba c1       	rjmp	.+884    	; 0xf28 <vfprintf+0x3ae>
     bb4:	85 32       	cpi	r24, 0x25	; 37
     bb6:	39 f4       	brne	.+14     	; 0xbc6 <vfprintf+0x4c>
     bb8:	93 fd       	sbrc	r25, 3
     bba:	85 91       	lpm	r24, Z+
     bbc:	93 ff       	sbrs	r25, 3
     bbe:	81 91       	ld	r24, Z+
     bc0:	7f 01       	movw	r14, r30
     bc2:	85 32       	cpi	r24, 0x25	; 37
     bc4:	29 f4       	brne	.+10     	; 0xbd0 <vfprintf+0x56>
     bc6:	b6 01       	movw	r22, r12
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	0e 94 b4 07 	call	0xf68	; 0xf68 <fputc>
     bce:	e7 cf       	rjmp	.-50     	; 0xb9e <vfprintf+0x24>
     bd0:	91 2c       	mov	r9, r1
     bd2:	21 2c       	mov	r2, r1
     bd4:	31 2c       	mov	r3, r1
     bd6:	ff e1       	ldi	r31, 0x1F	; 31
     bd8:	f3 15       	cp	r31, r3
     bda:	d8 f0       	brcs	.+54     	; 0xc12 <vfprintf+0x98>
     bdc:	8b 32       	cpi	r24, 0x2B	; 43
     bde:	79 f0       	breq	.+30     	; 0xbfe <vfprintf+0x84>
     be0:	38 f4       	brcc	.+14     	; 0xbf0 <vfprintf+0x76>
     be2:	80 32       	cpi	r24, 0x20	; 32
     be4:	79 f0       	breq	.+30     	; 0xc04 <vfprintf+0x8a>
     be6:	83 32       	cpi	r24, 0x23	; 35
     be8:	a1 f4       	brne	.+40     	; 0xc12 <vfprintf+0x98>
     bea:	23 2d       	mov	r18, r3
     bec:	20 61       	ori	r18, 0x10	; 16
     bee:	1d c0       	rjmp	.+58     	; 0xc2a <vfprintf+0xb0>
     bf0:	8d 32       	cpi	r24, 0x2D	; 45
     bf2:	61 f0       	breq	.+24     	; 0xc0c <vfprintf+0x92>
     bf4:	80 33       	cpi	r24, 0x30	; 48
     bf6:	69 f4       	brne	.+26     	; 0xc12 <vfprintf+0x98>
     bf8:	23 2d       	mov	r18, r3
     bfa:	21 60       	ori	r18, 0x01	; 1
     bfc:	16 c0       	rjmp	.+44     	; 0xc2a <vfprintf+0xb0>
     bfe:	83 2d       	mov	r24, r3
     c00:	82 60       	ori	r24, 0x02	; 2
     c02:	38 2e       	mov	r3, r24
     c04:	e3 2d       	mov	r30, r3
     c06:	e4 60       	ori	r30, 0x04	; 4
     c08:	3e 2e       	mov	r3, r30
     c0a:	2a c0       	rjmp	.+84     	; 0xc60 <vfprintf+0xe6>
     c0c:	f3 2d       	mov	r31, r3
     c0e:	f8 60       	ori	r31, 0x08	; 8
     c10:	1d c0       	rjmp	.+58     	; 0xc4c <vfprintf+0xd2>
     c12:	37 fc       	sbrc	r3, 7
     c14:	2d c0       	rjmp	.+90     	; 0xc70 <vfprintf+0xf6>
     c16:	20 ed       	ldi	r18, 0xD0	; 208
     c18:	28 0f       	add	r18, r24
     c1a:	2a 30       	cpi	r18, 0x0A	; 10
     c1c:	40 f0       	brcs	.+16     	; 0xc2e <vfprintf+0xb4>
     c1e:	8e 32       	cpi	r24, 0x2E	; 46
     c20:	b9 f4       	brne	.+46     	; 0xc50 <vfprintf+0xd6>
     c22:	36 fc       	sbrc	r3, 6
     c24:	81 c1       	rjmp	.+770    	; 0xf28 <vfprintf+0x3ae>
     c26:	23 2d       	mov	r18, r3
     c28:	20 64       	ori	r18, 0x40	; 64
     c2a:	32 2e       	mov	r3, r18
     c2c:	19 c0       	rjmp	.+50     	; 0xc60 <vfprintf+0xe6>
     c2e:	36 fe       	sbrs	r3, 6
     c30:	06 c0       	rjmp	.+12     	; 0xc3e <vfprintf+0xc4>
     c32:	8a e0       	ldi	r24, 0x0A	; 10
     c34:	98 9e       	mul	r9, r24
     c36:	20 0d       	add	r18, r0
     c38:	11 24       	eor	r1, r1
     c3a:	92 2e       	mov	r9, r18
     c3c:	11 c0       	rjmp	.+34     	; 0xc60 <vfprintf+0xe6>
     c3e:	ea e0       	ldi	r30, 0x0A	; 10
     c40:	2e 9e       	mul	r2, r30
     c42:	20 0d       	add	r18, r0
     c44:	11 24       	eor	r1, r1
     c46:	22 2e       	mov	r2, r18
     c48:	f3 2d       	mov	r31, r3
     c4a:	f0 62       	ori	r31, 0x20	; 32
     c4c:	3f 2e       	mov	r3, r31
     c4e:	08 c0       	rjmp	.+16     	; 0xc60 <vfprintf+0xe6>
     c50:	8c 36       	cpi	r24, 0x6C	; 108
     c52:	21 f4       	brne	.+8      	; 0xc5c <vfprintf+0xe2>
     c54:	83 2d       	mov	r24, r3
     c56:	80 68       	ori	r24, 0x80	; 128
     c58:	38 2e       	mov	r3, r24
     c5a:	02 c0       	rjmp	.+4      	; 0xc60 <vfprintf+0xe6>
     c5c:	88 36       	cpi	r24, 0x68	; 104
     c5e:	41 f4       	brne	.+16     	; 0xc70 <vfprintf+0xf6>
     c60:	f7 01       	movw	r30, r14
     c62:	93 fd       	sbrc	r25, 3
     c64:	85 91       	lpm	r24, Z+
     c66:	93 ff       	sbrs	r25, 3
     c68:	81 91       	ld	r24, Z+
     c6a:	7f 01       	movw	r14, r30
     c6c:	81 11       	cpse	r24, r1
     c6e:	b3 cf       	rjmp	.-154    	; 0xbd6 <vfprintf+0x5c>
     c70:	98 2f       	mov	r25, r24
     c72:	9f 7d       	andi	r25, 0xDF	; 223
     c74:	95 54       	subi	r25, 0x45	; 69
     c76:	93 30       	cpi	r25, 0x03	; 3
     c78:	28 f4       	brcc	.+10     	; 0xc84 <vfprintf+0x10a>
     c7a:	0c 5f       	subi	r16, 0xFC	; 252
     c7c:	1f 4f       	sbci	r17, 0xFF	; 255
     c7e:	9f e3       	ldi	r25, 0x3F	; 63
     c80:	99 83       	std	Y+1, r25	; 0x01
     c82:	0d c0       	rjmp	.+26     	; 0xc9e <vfprintf+0x124>
     c84:	83 36       	cpi	r24, 0x63	; 99
     c86:	31 f0       	breq	.+12     	; 0xc94 <vfprintf+0x11a>
     c88:	83 37       	cpi	r24, 0x73	; 115
     c8a:	71 f0       	breq	.+28     	; 0xca8 <vfprintf+0x12e>
     c8c:	83 35       	cpi	r24, 0x53	; 83
     c8e:	09 f0       	breq	.+2      	; 0xc92 <vfprintf+0x118>
     c90:	59 c0       	rjmp	.+178    	; 0xd44 <vfprintf+0x1ca>
     c92:	21 c0       	rjmp	.+66     	; 0xcd6 <vfprintf+0x15c>
     c94:	f8 01       	movw	r30, r16
     c96:	80 81       	ld	r24, Z
     c98:	89 83       	std	Y+1, r24	; 0x01
     c9a:	0e 5f       	subi	r16, 0xFE	; 254
     c9c:	1f 4f       	sbci	r17, 0xFF	; 255
     c9e:	88 24       	eor	r8, r8
     ca0:	83 94       	inc	r8
     ca2:	91 2c       	mov	r9, r1
     ca4:	53 01       	movw	r10, r6
     ca6:	13 c0       	rjmp	.+38     	; 0xcce <vfprintf+0x154>
     ca8:	28 01       	movw	r4, r16
     caa:	f2 e0       	ldi	r31, 0x02	; 2
     cac:	4f 0e       	add	r4, r31
     cae:	51 1c       	adc	r5, r1
     cb0:	f8 01       	movw	r30, r16
     cb2:	a0 80       	ld	r10, Z
     cb4:	b1 80       	ldd	r11, Z+1	; 0x01
     cb6:	36 fe       	sbrs	r3, 6
     cb8:	03 c0       	rjmp	.+6      	; 0xcc0 <vfprintf+0x146>
     cba:	69 2d       	mov	r22, r9
     cbc:	70 e0       	ldi	r23, 0x00	; 0
     cbe:	02 c0       	rjmp	.+4      	; 0xcc4 <vfprintf+0x14a>
     cc0:	6f ef       	ldi	r22, 0xFF	; 255
     cc2:	7f ef       	ldi	r23, 0xFF	; 255
     cc4:	c5 01       	movw	r24, r10
     cc6:	0e 94 a9 07 	call	0xf52	; 0xf52 <strnlen>
     cca:	4c 01       	movw	r8, r24
     ccc:	82 01       	movw	r16, r4
     cce:	f3 2d       	mov	r31, r3
     cd0:	ff 77       	andi	r31, 0x7F	; 127
     cd2:	3f 2e       	mov	r3, r31
     cd4:	16 c0       	rjmp	.+44     	; 0xd02 <vfprintf+0x188>
     cd6:	28 01       	movw	r4, r16
     cd8:	22 e0       	ldi	r18, 0x02	; 2
     cda:	42 0e       	add	r4, r18
     cdc:	51 1c       	adc	r5, r1
     cde:	f8 01       	movw	r30, r16
     ce0:	a0 80       	ld	r10, Z
     ce2:	b1 80       	ldd	r11, Z+1	; 0x01
     ce4:	36 fe       	sbrs	r3, 6
     ce6:	03 c0       	rjmp	.+6      	; 0xcee <vfprintf+0x174>
     ce8:	69 2d       	mov	r22, r9
     cea:	70 e0       	ldi	r23, 0x00	; 0
     cec:	02 c0       	rjmp	.+4      	; 0xcf2 <vfprintf+0x178>
     cee:	6f ef       	ldi	r22, 0xFF	; 255
     cf0:	7f ef       	ldi	r23, 0xFF	; 255
     cf2:	c5 01       	movw	r24, r10
     cf4:	0e 94 9e 07 	call	0xf3c	; 0xf3c <strnlen_P>
     cf8:	4c 01       	movw	r8, r24
     cfa:	f3 2d       	mov	r31, r3
     cfc:	f0 68       	ori	r31, 0x80	; 128
     cfe:	3f 2e       	mov	r3, r31
     d00:	82 01       	movw	r16, r4
     d02:	33 fc       	sbrc	r3, 3
     d04:	1b c0       	rjmp	.+54     	; 0xd3c <vfprintf+0x1c2>
     d06:	82 2d       	mov	r24, r2
     d08:	90 e0       	ldi	r25, 0x00	; 0
     d0a:	88 16       	cp	r8, r24
     d0c:	99 06       	cpc	r9, r25
     d0e:	b0 f4       	brcc	.+44     	; 0xd3c <vfprintf+0x1c2>
     d10:	b6 01       	movw	r22, r12
     d12:	80 e2       	ldi	r24, 0x20	; 32
     d14:	90 e0       	ldi	r25, 0x00	; 0
     d16:	0e 94 b4 07 	call	0xf68	; 0xf68 <fputc>
     d1a:	2a 94       	dec	r2
     d1c:	f4 cf       	rjmp	.-24     	; 0xd06 <vfprintf+0x18c>
     d1e:	f5 01       	movw	r30, r10
     d20:	37 fc       	sbrc	r3, 7
     d22:	85 91       	lpm	r24, Z+
     d24:	37 fe       	sbrs	r3, 7
     d26:	81 91       	ld	r24, Z+
     d28:	5f 01       	movw	r10, r30
     d2a:	b6 01       	movw	r22, r12
     d2c:	90 e0       	ldi	r25, 0x00	; 0
     d2e:	0e 94 b4 07 	call	0xf68	; 0xf68 <fputc>
     d32:	21 10       	cpse	r2, r1
     d34:	2a 94       	dec	r2
     d36:	21 e0       	ldi	r18, 0x01	; 1
     d38:	82 1a       	sub	r8, r18
     d3a:	91 08       	sbc	r9, r1
     d3c:	81 14       	cp	r8, r1
     d3e:	91 04       	cpc	r9, r1
     d40:	71 f7       	brne	.-36     	; 0xd1e <vfprintf+0x1a4>
     d42:	e8 c0       	rjmp	.+464    	; 0xf14 <vfprintf+0x39a>
     d44:	84 36       	cpi	r24, 0x64	; 100
     d46:	11 f0       	breq	.+4      	; 0xd4c <vfprintf+0x1d2>
     d48:	89 36       	cpi	r24, 0x69	; 105
     d4a:	41 f5       	brne	.+80     	; 0xd9c <vfprintf+0x222>
     d4c:	f8 01       	movw	r30, r16
     d4e:	37 fe       	sbrs	r3, 7
     d50:	07 c0       	rjmp	.+14     	; 0xd60 <vfprintf+0x1e6>
     d52:	60 81       	ld	r22, Z
     d54:	71 81       	ldd	r23, Z+1	; 0x01
     d56:	82 81       	ldd	r24, Z+2	; 0x02
     d58:	93 81       	ldd	r25, Z+3	; 0x03
     d5a:	0c 5f       	subi	r16, 0xFC	; 252
     d5c:	1f 4f       	sbci	r17, 0xFF	; 255
     d5e:	08 c0       	rjmp	.+16     	; 0xd70 <vfprintf+0x1f6>
     d60:	60 81       	ld	r22, Z
     d62:	71 81       	ldd	r23, Z+1	; 0x01
     d64:	07 2e       	mov	r0, r23
     d66:	00 0c       	add	r0, r0
     d68:	88 0b       	sbc	r24, r24
     d6a:	99 0b       	sbc	r25, r25
     d6c:	0e 5f       	subi	r16, 0xFE	; 254
     d6e:	1f 4f       	sbci	r17, 0xFF	; 255
     d70:	f3 2d       	mov	r31, r3
     d72:	ff 76       	andi	r31, 0x6F	; 111
     d74:	3f 2e       	mov	r3, r31
     d76:	97 ff       	sbrs	r25, 7
     d78:	09 c0       	rjmp	.+18     	; 0xd8c <vfprintf+0x212>
     d7a:	90 95       	com	r25
     d7c:	80 95       	com	r24
     d7e:	70 95       	com	r23
     d80:	61 95       	neg	r22
     d82:	7f 4f       	sbci	r23, 0xFF	; 255
     d84:	8f 4f       	sbci	r24, 0xFF	; 255
     d86:	9f 4f       	sbci	r25, 0xFF	; 255
     d88:	f0 68       	ori	r31, 0x80	; 128
     d8a:	3f 2e       	mov	r3, r31
     d8c:	2a e0       	ldi	r18, 0x0A	; 10
     d8e:	30 e0       	ldi	r19, 0x00	; 0
     d90:	a3 01       	movw	r20, r6
     d92:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <__ultoa_invert>
     d96:	88 2e       	mov	r8, r24
     d98:	86 18       	sub	r8, r6
     d9a:	45 c0       	rjmp	.+138    	; 0xe26 <vfprintf+0x2ac>
     d9c:	85 37       	cpi	r24, 0x75	; 117
     d9e:	31 f4       	brne	.+12     	; 0xdac <vfprintf+0x232>
     da0:	23 2d       	mov	r18, r3
     da2:	2f 7e       	andi	r18, 0xEF	; 239
     da4:	b2 2e       	mov	r11, r18
     da6:	2a e0       	ldi	r18, 0x0A	; 10
     da8:	30 e0       	ldi	r19, 0x00	; 0
     daa:	25 c0       	rjmp	.+74     	; 0xdf6 <vfprintf+0x27c>
     dac:	93 2d       	mov	r25, r3
     dae:	99 7f       	andi	r25, 0xF9	; 249
     db0:	b9 2e       	mov	r11, r25
     db2:	8f 36       	cpi	r24, 0x6F	; 111
     db4:	c1 f0       	breq	.+48     	; 0xde6 <vfprintf+0x26c>
     db6:	18 f4       	brcc	.+6      	; 0xdbe <vfprintf+0x244>
     db8:	88 35       	cpi	r24, 0x58	; 88
     dba:	79 f0       	breq	.+30     	; 0xdda <vfprintf+0x260>
     dbc:	b5 c0       	rjmp	.+362    	; 0xf28 <vfprintf+0x3ae>
     dbe:	80 37       	cpi	r24, 0x70	; 112
     dc0:	19 f0       	breq	.+6      	; 0xdc8 <vfprintf+0x24e>
     dc2:	88 37       	cpi	r24, 0x78	; 120
     dc4:	21 f0       	breq	.+8      	; 0xdce <vfprintf+0x254>
     dc6:	b0 c0       	rjmp	.+352    	; 0xf28 <vfprintf+0x3ae>
     dc8:	e9 2f       	mov	r30, r25
     dca:	e0 61       	ori	r30, 0x10	; 16
     dcc:	be 2e       	mov	r11, r30
     dce:	b4 fe       	sbrs	r11, 4
     dd0:	0d c0       	rjmp	.+26     	; 0xdec <vfprintf+0x272>
     dd2:	fb 2d       	mov	r31, r11
     dd4:	f4 60       	ori	r31, 0x04	; 4
     dd6:	bf 2e       	mov	r11, r31
     dd8:	09 c0       	rjmp	.+18     	; 0xdec <vfprintf+0x272>
     dda:	34 fe       	sbrs	r3, 4
     ddc:	0a c0       	rjmp	.+20     	; 0xdf2 <vfprintf+0x278>
     dde:	29 2f       	mov	r18, r25
     de0:	26 60       	ori	r18, 0x06	; 6
     de2:	b2 2e       	mov	r11, r18
     de4:	06 c0       	rjmp	.+12     	; 0xdf2 <vfprintf+0x278>
     de6:	28 e0       	ldi	r18, 0x08	; 8
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	05 c0       	rjmp	.+10     	; 0xdf6 <vfprintf+0x27c>
     dec:	20 e1       	ldi	r18, 0x10	; 16
     dee:	30 e0       	ldi	r19, 0x00	; 0
     df0:	02 c0       	rjmp	.+4      	; 0xdf6 <vfprintf+0x27c>
     df2:	20 e1       	ldi	r18, 0x10	; 16
     df4:	32 e0       	ldi	r19, 0x02	; 2
     df6:	f8 01       	movw	r30, r16
     df8:	b7 fe       	sbrs	r11, 7
     dfa:	07 c0       	rjmp	.+14     	; 0xe0a <vfprintf+0x290>
     dfc:	60 81       	ld	r22, Z
     dfe:	71 81       	ldd	r23, Z+1	; 0x01
     e00:	82 81       	ldd	r24, Z+2	; 0x02
     e02:	93 81       	ldd	r25, Z+3	; 0x03
     e04:	0c 5f       	subi	r16, 0xFC	; 252
     e06:	1f 4f       	sbci	r17, 0xFF	; 255
     e08:	06 c0       	rjmp	.+12     	; 0xe16 <vfprintf+0x29c>
     e0a:	60 81       	ld	r22, Z
     e0c:	71 81       	ldd	r23, Z+1	; 0x01
     e0e:	80 e0       	ldi	r24, 0x00	; 0
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	0e 5f       	subi	r16, 0xFE	; 254
     e14:	1f 4f       	sbci	r17, 0xFF	; 255
     e16:	a3 01       	movw	r20, r6
     e18:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <__ultoa_invert>
     e1c:	88 2e       	mov	r8, r24
     e1e:	86 18       	sub	r8, r6
     e20:	fb 2d       	mov	r31, r11
     e22:	ff 77       	andi	r31, 0x7F	; 127
     e24:	3f 2e       	mov	r3, r31
     e26:	36 fe       	sbrs	r3, 6
     e28:	0d c0       	rjmp	.+26     	; 0xe44 <vfprintf+0x2ca>
     e2a:	23 2d       	mov	r18, r3
     e2c:	2e 7f       	andi	r18, 0xFE	; 254
     e2e:	a2 2e       	mov	r10, r18
     e30:	89 14       	cp	r8, r9
     e32:	58 f4       	brcc	.+22     	; 0xe4a <vfprintf+0x2d0>
     e34:	34 fe       	sbrs	r3, 4
     e36:	0b c0       	rjmp	.+22     	; 0xe4e <vfprintf+0x2d4>
     e38:	32 fc       	sbrc	r3, 2
     e3a:	09 c0       	rjmp	.+18     	; 0xe4e <vfprintf+0x2d4>
     e3c:	83 2d       	mov	r24, r3
     e3e:	8e 7e       	andi	r24, 0xEE	; 238
     e40:	a8 2e       	mov	r10, r24
     e42:	05 c0       	rjmp	.+10     	; 0xe4e <vfprintf+0x2d4>
     e44:	b8 2c       	mov	r11, r8
     e46:	a3 2c       	mov	r10, r3
     e48:	03 c0       	rjmp	.+6      	; 0xe50 <vfprintf+0x2d6>
     e4a:	b8 2c       	mov	r11, r8
     e4c:	01 c0       	rjmp	.+2      	; 0xe50 <vfprintf+0x2d6>
     e4e:	b9 2c       	mov	r11, r9
     e50:	a4 fe       	sbrs	r10, 4
     e52:	0f c0       	rjmp	.+30     	; 0xe72 <vfprintf+0x2f8>
     e54:	fe 01       	movw	r30, r28
     e56:	e8 0d       	add	r30, r8
     e58:	f1 1d       	adc	r31, r1
     e5a:	80 81       	ld	r24, Z
     e5c:	80 33       	cpi	r24, 0x30	; 48
     e5e:	21 f4       	brne	.+8      	; 0xe68 <vfprintf+0x2ee>
     e60:	9a 2d       	mov	r25, r10
     e62:	99 7e       	andi	r25, 0xE9	; 233
     e64:	a9 2e       	mov	r10, r25
     e66:	09 c0       	rjmp	.+18     	; 0xe7a <vfprintf+0x300>
     e68:	a2 fe       	sbrs	r10, 2
     e6a:	06 c0       	rjmp	.+12     	; 0xe78 <vfprintf+0x2fe>
     e6c:	b3 94       	inc	r11
     e6e:	b3 94       	inc	r11
     e70:	04 c0       	rjmp	.+8      	; 0xe7a <vfprintf+0x300>
     e72:	8a 2d       	mov	r24, r10
     e74:	86 78       	andi	r24, 0x86	; 134
     e76:	09 f0       	breq	.+2      	; 0xe7a <vfprintf+0x300>
     e78:	b3 94       	inc	r11
     e7a:	a3 fc       	sbrc	r10, 3
     e7c:	11 c0       	rjmp	.+34     	; 0xea0 <vfprintf+0x326>
     e7e:	a0 fe       	sbrs	r10, 0
     e80:	06 c0       	rjmp	.+12     	; 0xe8e <vfprintf+0x314>
     e82:	b2 14       	cp	r11, r2
     e84:	88 f4       	brcc	.+34     	; 0xea8 <vfprintf+0x32e>
     e86:	28 0c       	add	r2, r8
     e88:	92 2c       	mov	r9, r2
     e8a:	9b 18       	sub	r9, r11
     e8c:	0e c0       	rjmp	.+28     	; 0xeaa <vfprintf+0x330>
     e8e:	b2 14       	cp	r11, r2
     e90:	60 f4       	brcc	.+24     	; 0xeaa <vfprintf+0x330>
     e92:	b6 01       	movw	r22, r12
     e94:	80 e2       	ldi	r24, 0x20	; 32
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	0e 94 b4 07 	call	0xf68	; 0xf68 <fputc>
     e9c:	b3 94       	inc	r11
     e9e:	f7 cf       	rjmp	.-18     	; 0xe8e <vfprintf+0x314>
     ea0:	b2 14       	cp	r11, r2
     ea2:	18 f4       	brcc	.+6      	; 0xeaa <vfprintf+0x330>
     ea4:	2b 18       	sub	r2, r11
     ea6:	02 c0       	rjmp	.+4      	; 0xeac <vfprintf+0x332>
     ea8:	98 2c       	mov	r9, r8
     eaa:	21 2c       	mov	r2, r1
     eac:	a4 fe       	sbrs	r10, 4
     eae:	10 c0       	rjmp	.+32     	; 0xed0 <vfprintf+0x356>
     eb0:	b6 01       	movw	r22, r12
     eb2:	80 e3       	ldi	r24, 0x30	; 48
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	0e 94 b4 07 	call	0xf68	; 0xf68 <fputc>
     eba:	a2 fe       	sbrs	r10, 2
     ebc:	17 c0       	rjmp	.+46     	; 0xeec <vfprintf+0x372>
     ebe:	a1 fc       	sbrc	r10, 1
     ec0:	03 c0       	rjmp	.+6      	; 0xec8 <vfprintf+0x34e>
     ec2:	88 e7       	ldi	r24, 0x78	; 120
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	02 c0       	rjmp	.+4      	; 0xecc <vfprintf+0x352>
     ec8:	88 e5       	ldi	r24, 0x58	; 88
     eca:	90 e0       	ldi	r25, 0x00	; 0
     ecc:	b6 01       	movw	r22, r12
     ece:	0c c0       	rjmp	.+24     	; 0xee8 <vfprintf+0x36e>
     ed0:	8a 2d       	mov	r24, r10
     ed2:	86 78       	andi	r24, 0x86	; 134
     ed4:	59 f0       	breq	.+22     	; 0xeec <vfprintf+0x372>
     ed6:	a1 fe       	sbrs	r10, 1
     ed8:	02 c0       	rjmp	.+4      	; 0xede <vfprintf+0x364>
     eda:	8b e2       	ldi	r24, 0x2B	; 43
     edc:	01 c0       	rjmp	.+2      	; 0xee0 <vfprintf+0x366>
     ede:	80 e2       	ldi	r24, 0x20	; 32
     ee0:	a7 fc       	sbrc	r10, 7
     ee2:	8d e2       	ldi	r24, 0x2D	; 45
     ee4:	b6 01       	movw	r22, r12
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	0e 94 b4 07 	call	0xf68	; 0xf68 <fputc>
     eec:	89 14       	cp	r8, r9
     eee:	38 f4       	brcc	.+14     	; 0xefe <vfprintf+0x384>
     ef0:	b6 01       	movw	r22, r12
     ef2:	80 e3       	ldi	r24, 0x30	; 48
     ef4:	90 e0       	ldi	r25, 0x00	; 0
     ef6:	0e 94 b4 07 	call	0xf68	; 0xf68 <fputc>
     efa:	9a 94       	dec	r9
     efc:	f7 cf       	rjmp	.-18     	; 0xeec <vfprintf+0x372>
     efe:	8a 94       	dec	r8
     f00:	f3 01       	movw	r30, r6
     f02:	e8 0d       	add	r30, r8
     f04:	f1 1d       	adc	r31, r1
     f06:	80 81       	ld	r24, Z
     f08:	b6 01       	movw	r22, r12
     f0a:	90 e0       	ldi	r25, 0x00	; 0
     f0c:	0e 94 b4 07 	call	0xf68	; 0xf68 <fputc>
     f10:	81 10       	cpse	r8, r1
     f12:	f5 cf       	rjmp	.-22     	; 0xefe <vfprintf+0x384>
     f14:	22 20       	and	r2, r2
     f16:	09 f4       	brne	.+2      	; 0xf1a <vfprintf+0x3a0>
     f18:	42 ce       	rjmp	.-892    	; 0xb9e <vfprintf+0x24>
     f1a:	b6 01       	movw	r22, r12
     f1c:	80 e2       	ldi	r24, 0x20	; 32
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	0e 94 b4 07 	call	0xf68	; 0xf68 <fputc>
     f24:	2a 94       	dec	r2
     f26:	f6 cf       	rjmp	.-20     	; 0xf14 <vfprintf+0x39a>
     f28:	f6 01       	movw	r30, r12
     f2a:	86 81       	ldd	r24, Z+6	; 0x06
     f2c:	97 81       	ldd	r25, Z+7	; 0x07
     f2e:	02 c0       	rjmp	.+4      	; 0xf34 <vfprintf+0x3ba>
     f30:	8f ef       	ldi	r24, 0xFF	; 255
     f32:	9f ef       	ldi	r25, 0xFF	; 255
     f34:	2b 96       	adiw	r28, 0x0b	; 11
     f36:	e2 e1       	ldi	r30, 0x12	; 18
     f38:	0c 94 6a 08 	jmp	0x10d4	; 0x10d4 <__epilogue_restores__>

00000f3c <strnlen_P>:
     f3c:	fc 01       	movw	r30, r24
     f3e:	05 90       	lpm	r0, Z+
     f40:	61 50       	subi	r22, 0x01	; 1
     f42:	70 40       	sbci	r23, 0x00	; 0
     f44:	01 10       	cpse	r0, r1
     f46:	d8 f7       	brcc	.-10     	; 0xf3e <strnlen_P+0x2>
     f48:	80 95       	com	r24
     f4a:	90 95       	com	r25
     f4c:	8e 0f       	add	r24, r30
     f4e:	9f 1f       	adc	r25, r31
     f50:	08 95       	ret

00000f52 <strnlen>:
     f52:	fc 01       	movw	r30, r24
     f54:	61 50       	subi	r22, 0x01	; 1
     f56:	70 40       	sbci	r23, 0x00	; 0
     f58:	01 90       	ld	r0, Z+
     f5a:	01 10       	cpse	r0, r1
     f5c:	d8 f7       	brcc	.-10     	; 0xf54 <strnlen+0x2>
     f5e:	80 95       	com	r24
     f60:	90 95       	com	r25
     f62:	8e 0f       	add	r24, r30
     f64:	9f 1f       	adc	r25, r31
     f66:	08 95       	ret

00000f68 <fputc>:
     f68:	0f 93       	push	r16
     f6a:	1f 93       	push	r17
     f6c:	cf 93       	push	r28
     f6e:	df 93       	push	r29
     f70:	fb 01       	movw	r30, r22
     f72:	23 81       	ldd	r18, Z+3	; 0x03
     f74:	21 fd       	sbrc	r18, 1
     f76:	03 c0       	rjmp	.+6      	; 0xf7e <fputc+0x16>
     f78:	8f ef       	ldi	r24, 0xFF	; 255
     f7a:	9f ef       	ldi	r25, 0xFF	; 255
     f7c:	2c c0       	rjmp	.+88     	; 0xfd6 <fputc+0x6e>
     f7e:	22 ff       	sbrs	r18, 2
     f80:	16 c0       	rjmp	.+44     	; 0xfae <fputc+0x46>
     f82:	46 81       	ldd	r20, Z+6	; 0x06
     f84:	57 81       	ldd	r21, Z+7	; 0x07
     f86:	24 81       	ldd	r18, Z+4	; 0x04
     f88:	35 81       	ldd	r19, Z+5	; 0x05
     f8a:	42 17       	cp	r20, r18
     f8c:	53 07       	cpc	r21, r19
     f8e:	44 f4       	brge	.+16     	; 0xfa0 <fputc+0x38>
     f90:	a0 81       	ld	r26, Z
     f92:	b1 81       	ldd	r27, Z+1	; 0x01
     f94:	9d 01       	movw	r18, r26
     f96:	2f 5f       	subi	r18, 0xFF	; 255
     f98:	3f 4f       	sbci	r19, 0xFF	; 255
     f9a:	31 83       	std	Z+1, r19	; 0x01
     f9c:	20 83       	st	Z, r18
     f9e:	8c 93       	st	X, r24
     fa0:	26 81       	ldd	r18, Z+6	; 0x06
     fa2:	37 81       	ldd	r19, Z+7	; 0x07
     fa4:	2f 5f       	subi	r18, 0xFF	; 255
     fa6:	3f 4f       	sbci	r19, 0xFF	; 255
     fa8:	37 83       	std	Z+7, r19	; 0x07
     faa:	26 83       	std	Z+6, r18	; 0x06
     fac:	14 c0       	rjmp	.+40     	; 0xfd6 <fputc+0x6e>
     fae:	8b 01       	movw	r16, r22
     fb0:	ec 01       	movw	r28, r24
     fb2:	fb 01       	movw	r30, r22
     fb4:	00 84       	ldd	r0, Z+8	; 0x08
     fb6:	f1 85       	ldd	r31, Z+9	; 0x09
     fb8:	e0 2d       	mov	r30, r0
     fba:	09 95       	icall
     fbc:	89 2b       	or	r24, r25
     fbe:	e1 f6       	brne	.-72     	; 0xf78 <fputc+0x10>
     fc0:	d8 01       	movw	r26, r16
     fc2:	16 96       	adiw	r26, 0x06	; 6
     fc4:	8d 91       	ld	r24, X+
     fc6:	9c 91       	ld	r25, X
     fc8:	17 97       	sbiw	r26, 0x07	; 7
     fca:	01 96       	adiw	r24, 0x01	; 1
     fcc:	17 96       	adiw	r26, 0x07	; 7
     fce:	9c 93       	st	X, r25
     fd0:	8e 93       	st	-X, r24
     fd2:	16 97       	sbiw	r26, 0x06	; 6
     fd4:	ce 01       	movw	r24, r28
     fd6:	df 91       	pop	r29
     fd8:	cf 91       	pop	r28
     fda:	1f 91       	pop	r17
     fdc:	0f 91       	pop	r16
     fde:	08 95       	ret

00000fe0 <__ultoa_invert>:
     fe0:	fa 01       	movw	r30, r20
     fe2:	aa 27       	eor	r26, r26
     fe4:	28 30       	cpi	r18, 0x08	; 8
     fe6:	51 f1       	breq	.+84     	; 0x103c <__ultoa_invert+0x5c>
     fe8:	20 31       	cpi	r18, 0x10	; 16
     fea:	81 f1       	breq	.+96     	; 0x104c <__ultoa_invert+0x6c>
     fec:	e8 94       	clt
     fee:	6f 93       	push	r22
     ff0:	6e 7f       	andi	r22, 0xFE	; 254
     ff2:	6e 5f       	subi	r22, 0xFE	; 254
     ff4:	7f 4f       	sbci	r23, 0xFF	; 255
     ff6:	8f 4f       	sbci	r24, 0xFF	; 255
     ff8:	9f 4f       	sbci	r25, 0xFF	; 255
     ffa:	af 4f       	sbci	r26, 0xFF	; 255
     ffc:	b1 e0       	ldi	r27, 0x01	; 1
     ffe:	3e d0       	rcall	.+124    	; 0x107c <__ultoa_invert+0x9c>
    1000:	b4 e0       	ldi	r27, 0x04	; 4
    1002:	3c d0       	rcall	.+120    	; 0x107c <__ultoa_invert+0x9c>
    1004:	67 0f       	add	r22, r23
    1006:	78 1f       	adc	r23, r24
    1008:	89 1f       	adc	r24, r25
    100a:	9a 1f       	adc	r25, r26
    100c:	a1 1d       	adc	r26, r1
    100e:	68 0f       	add	r22, r24
    1010:	79 1f       	adc	r23, r25
    1012:	8a 1f       	adc	r24, r26
    1014:	91 1d       	adc	r25, r1
    1016:	a1 1d       	adc	r26, r1
    1018:	6a 0f       	add	r22, r26
    101a:	71 1d       	adc	r23, r1
    101c:	81 1d       	adc	r24, r1
    101e:	91 1d       	adc	r25, r1
    1020:	a1 1d       	adc	r26, r1
    1022:	20 d0       	rcall	.+64     	; 0x1064 <__ultoa_invert+0x84>
    1024:	09 f4       	brne	.+2      	; 0x1028 <__ultoa_invert+0x48>
    1026:	68 94       	set
    1028:	3f 91       	pop	r19
    102a:	2a e0       	ldi	r18, 0x0A	; 10
    102c:	26 9f       	mul	r18, r22
    102e:	11 24       	eor	r1, r1
    1030:	30 19       	sub	r19, r0
    1032:	30 5d       	subi	r19, 0xD0	; 208
    1034:	31 93       	st	Z+, r19
    1036:	de f6       	brtc	.-74     	; 0xfee <__ultoa_invert+0xe>
    1038:	cf 01       	movw	r24, r30
    103a:	08 95       	ret
    103c:	46 2f       	mov	r20, r22
    103e:	47 70       	andi	r20, 0x07	; 7
    1040:	40 5d       	subi	r20, 0xD0	; 208
    1042:	41 93       	st	Z+, r20
    1044:	b3 e0       	ldi	r27, 0x03	; 3
    1046:	0f d0       	rcall	.+30     	; 0x1066 <__ultoa_invert+0x86>
    1048:	c9 f7       	brne	.-14     	; 0x103c <__ultoa_invert+0x5c>
    104a:	f6 cf       	rjmp	.-20     	; 0x1038 <__ultoa_invert+0x58>
    104c:	46 2f       	mov	r20, r22
    104e:	4f 70       	andi	r20, 0x0F	; 15
    1050:	40 5d       	subi	r20, 0xD0	; 208
    1052:	4a 33       	cpi	r20, 0x3A	; 58
    1054:	18 f0       	brcs	.+6      	; 0x105c <__ultoa_invert+0x7c>
    1056:	49 5d       	subi	r20, 0xD9	; 217
    1058:	31 fd       	sbrc	r19, 1
    105a:	40 52       	subi	r20, 0x20	; 32
    105c:	41 93       	st	Z+, r20
    105e:	02 d0       	rcall	.+4      	; 0x1064 <__ultoa_invert+0x84>
    1060:	a9 f7       	brne	.-22     	; 0x104c <__ultoa_invert+0x6c>
    1062:	ea cf       	rjmp	.-44     	; 0x1038 <__ultoa_invert+0x58>
    1064:	b4 e0       	ldi	r27, 0x04	; 4
    1066:	a6 95       	lsr	r26
    1068:	97 95       	ror	r25
    106a:	87 95       	ror	r24
    106c:	77 95       	ror	r23
    106e:	67 95       	ror	r22
    1070:	ba 95       	dec	r27
    1072:	c9 f7       	brne	.-14     	; 0x1066 <__ultoa_invert+0x86>
    1074:	00 97       	sbiw	r24, 0x00	; 0
    1076:	61 05       	cpc	r22, r1
    1078:	71 05       	cpc	r23, r1
    107a:	08 95       	ret
    107c:	9b 01       	movw	r18, r22
    107e:	ac 01       	movw	r20, r24
    1080:	0a 2e       	mov	r0, r26
    1082:	06 94       	lsr	r0
    1084:	57 95       	ror	r21
    1086:	47 95       	ror	r20
    1088:	37 95       	ror	r19
    108a:	27 95       	ror	r18
    108c:	ba 95       	dec	r27
    108e:	c9 f7       	brne	.-14     	; 0x1082 <__ultoa_invert+0xa2>
    1090:	62 0f       	add	r22, r18
    1092:	73 1f       	adc	r23, r19
    1094:	84 1f       	adc	r24, r20
    1096:	95 1f       	adc	r25, r21
    1098:	a0 1d       	adc	r26, r0
    109a:	08 95       	ret

0000109c <__prologue_saves__>:
    109c:	2f 92       	push	r2
    109e:	3f 92       	push	r3
    10a0:	4f 92       	push	r4
    10a2:	5f 92       	push	r5
    10a4:	6f 92       	push	r6
    10a6:	7f 92       	push	r7
    10a8:	8f 92       	push	r8
    10aa:	9f 92       	push	r9
    10ac:	af 92       	push	r10
    10ae:	bf 92       	push	r11
    10b0:	cf 92       	push	r12
    10b2:	df 92       	push	r13
    10b4:	ef 92       	push	r14
    10b6:	ff 92       	push	r15
    10b8:	0f 93       	push	r16
    10ba:	1f 93       	push	r17
    10bc:	cf 93       	push	r28
    10be:	df 93       	push	r29
    10c0:	cd b7       	in	r28, 0x3d	; 61
    10c2:	de b7       	in	r29, 0x3e	; 62
    10c4:	ca 1b       	sub	r28, r26
    10c6:	db 0b       	sbc	r29, r27
    10c8:	0f b6       	in	r0, 0x3f	; 63
    10ca:	f8 94       	cli
    10cc:	de bf       	out	0x3e, r29	; 62
    10ce:	0f be       	out	0x3f, r0	; 63
    10d0:	cd bf       	out	0x3d, r28	; 61
    10d2:	09 94       	ijmp

000010d4 <__epilogue_restores__>:
    10d4:	2a 88       	ldd	r2, Y+18	; 0x12
    10d6:	39 88       	ldd	r3, Y+17	; 0x11
    10d8:	48 88       	ldd	r4, Y+16	; 0x10
    10da:	5f 84       	ldd	r5, Y+15	; 0x0f
    10dc:	6e 84       	ldd	r6, Y+14	; 0x0e
    10de:	7d 84       	ldd	r7, Y+13	; 0x0d
    10e0:	8c 84       	ldd	r8, Y+12	; 0x0c
    10e2:	9b 84       	ldd	r9, Y+11	; 0x0b
    10e4:	aa 84       	ldd	r10, Y+10	; 0x0a
    10e6:	b9 84       	ldd	r11, Y+9	; 0x09
    10e8:	c8 84       	ldd	r12, Y+8	; 0x08
    10ea:	df 80       	ldd	r13, Y+7	; 0x07
    10ec:	ee 80       	ldd	r14, Y+6	; 0x06
    10ee:	fd 80       	ldd	r15, Y+5	; 0x05
    10f0:	0c 81       	ldd	r16, Y+4	; 0x04
    10f2:	1b 81       	ldd	r17, Y+3	; 0x03
    10f4:	aa 81       	ldd	r26, Y+2	; 0x02
    10f6:	b9 81       	ldd	r27, Y+1	; 0x01
    10f8:	ce 0f       	add	r28, r30
    10fa:	d1 1d       	adc	r29, r1
    10fc:	0f b6       	in	r0, 0x3f	; 63
    10fe:	f8 94       	cli
    1100:	de bf       	out	0x3e, r29	; 62
    1102:	0f be       	out	0x3f, r0	; 63
    1104:	cd bf       	out	0x3d, r28	; 61
    1106:	ed 01       	movw	r28, r26
    1108:	08 95       	ret

0000110a <_exit>:
    110a:	f8 94       	cli

0000110c <__stop_program>:
    110c:	ff cf       	rjmp	.-2      	; 0x110c <__stop_program>
